{"version":3,"file":"static/js/9808.ea789867.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-emoji-picker.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\n\nconst EMOJI_ASSET_URL = 'https://cdn.dyte.in/assets/emojis-data.json';\n/**\n * fetches the latest emoji list from CDN\n * @returns list of emojis\n */\nconst fetchEmojis = async () => {\n  const emojis = await fetch(EMOJI_ASSET_URL);\n  return emojis.json();\n};\n\nconst dyteEmojiPickerCss = \".scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{box-sizing:border-box;display:inline-flex;height:var(--dyte-space-64, 256px);flex-direction:column;padding:var(--dyte-space-3, 12px);padding-bottom:var(--dyte-space-0, 0px);font-family:var(--dyte-font-family, sans-serif);width:auto;min-width:var(--dyte-space-20, 80px);-webkit-user-select:none;-moz-user-select:none;user-select:none;transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255))}#emoji-grid{margin-top:var(--dyte-space-2, 8px);box-sizing:border-box;display:grid;grid-template-columns:repeat(7, minmax(0, 1fr));padding-bottom:var(--dyte-space-12, 48px);font-family:var(--dyte-font-family, sans-serif);overflow-x:hidden;overflow-y:scroll;height:100%;grid-auto-rows:minmax(-webkit-min-content, -webkit-max-content);grid-auto-rows:minmax(min-content, max-content)}#loader{display:flex;height:100%;width:100%;align-items:center;justify-content:center}input{display:block;height:var(--dyte-space-8, 32px);padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px);font-family:var(--dyte-font-family, sans-serif);font-size:14px;border-width:var(--dyte-border-width-none, 0);border-style:solid;border-style:none;border-color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64));--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88))}input::-moz-placeholder{color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}input::placeholder{color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}input{border-radius:var(--dyte-border-radius-sm, 4px);outline:2px solid transparent;outline-offset:2px;transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms;border:var(--dyte-border-width-sm, 1px) solid rgb(var(--dyte-colors-background-600, 60 60 60))}input:focus{--tw-border-opacity:1;border-color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-border-opacity));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);--tw-ring-color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-ring-opacity));--tw-ring-opacity:0.3}.emoji{height:var(--dyte-space-10, 40px);width:var(--dyte-space-10, 40px);font-size:20px;color:rgb(var(--dyte-colors-text-1000, 255 255 255))}\";\n\nconst DyteEmojiPicker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.emojiClicked = createEvent(this, \"dyteEmojiClicked\", 7);\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.emojiList = undefined;\n    this.filterVal = '';\n    this.filteredEmojis = [];\n  }\n  componentWillLoad() {\n    // Don't use async here as it will block the render\n    fetchEmojis().then((e) => {\n      this.emojiList = e;\n      this.handleInputChange({ value: '' });\n    });\n  }\n  handleInputChange(target) {\n    this.filterVal = target.value;\n    const regex = new RegExp(`([^,]*?${this.filterVal}[^,]*):(\\\\d+)`, 'g');\n    this.filteredEmojis = Array.from(this.emojiList['search'].matchAll(regex)).map((m) => {\n      return { name: m[1], emoji: this.emojiList['emojis'][m[2]] };\n    });\n  }\n  handleEmojiClick(emoji) {\n    this.emojiClicked.emit(emoji);\n  }\n  mapEmojiList() {\n    var _a;\n    if (((_a = this.emojiList) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n      return (h(\"div\", { id: \"loader\" }, h(\"dyte-spinner\", { iconPack: this.iconPack, t: this.t })));\n    }\n    return (h(\"div\", { id: \"emoji-grid\", class: \"scrollbar\" }, this.filteredEmojis.map((e) => (h(\"dyte-button\", { iconPack: this.iconPack, t: this.t, key: `emoji-button-${e.name}`, class: \"emoji\", variant: \"ghost\", kind: \"icon\", title: e.name, onClick: () => this.handleEmojiClick(e.emoji) }, e.emoji)))));\n  }\n  render() {\n    return (h(Host, null, h(\"input\", { value: this.filterVal, onInput: (event) => this.handleInputChange(event.target), placeholder: this.t('Search') }), this.mapEmojiList()));\n  }\n};\nDyteEmojiPicker.style = dyteEmojiPickerCss;\n\nexport { DyteEmojiPicker as dyte_emoji_picker };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n"],"names":["fetchEmojis","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","emojis","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","arguments","DyteEmojiPicker","hostRef","_classCallCheck","registerInstance","this","emojiClicked","createEvent","iconPack","defaultIconPack","t","useLanguage","emojiList","undefined","filterVal","filteredEmojis","_createClass","key","value","_this","then","e","handleInputChange","target","_this2","regex","RegExp","concat","Array","from","matchAll","map","m","name","emoji","emit","_a","_this3","length","h","id","class","variant","kind","title","onClick","handleEmojiClick","_this4","Host","onInput","event","placeholder","mapEmojiList","style","getLangData","lang","res","trim","defaultLanguage","ok","t0","Object","t1","t2","t3","assign","call","t4","_x"],"sourceRoot":""}