{"version":3,"file":"static/js/2332.3b2c3527.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-plugins-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { o as onChange, s as state } from './store-183b9cab.js';\n\nconst dytePluginsToggleCss = \":host{display:block;font-family:var(--dyte-font-family, sans-serif)}\";\n\nconst DytePluginsToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.variant = 'button';\n    this.meeting = undefined;\n    this.states = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.pluginsActive = false;\n  }\n  connectedCallback() {\n    this.statesChanged(this.states);\n    onChange('sidebar', () => this.statesChanged());\n  }\n  statesChanged(s) {\n    const states = s || state;\n    if (states != null) {\n      this.pluginsActive = states.activeSidebar === true && states.sidebar === 'plugins';\n    }\n  }\n  togglePlugins() {\n    const states = this.states || state;\n    this.pluginsActive = !((states === null || states === void 0 ? void 0 : states.activeSidebar) && (states === null || states === void 0 ? void 0 : states.sidebar) === 'plugins');\n    this.stateUpdate.emit({\n      activeSidebar: this.pluginsActive,\n      sidebar: this.pluginsActive ? 'plugins' : 'none',\n      activeMoreMenu: false,\n    });\n    state.activeSidebar = this.pluginsActive;\n    state.sidebar = this.pluginsActive ? 'plugins' : 'none';\n    state.activeMoreMenu = false;\n  }\n  render() {\n    var _a, _b, _c, _d, _e;\n    if (this.meeting && !this.meeting.plugins)\n      return;\n    const text = this.t('plugins');\n    const config = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self.config;\n    if (config && !((_c = (_b = config.controlBar) === null || _b === void 0 ? void 0 : _b.elements) === null || _c === void 0 ? void 0 : _c.plugins))\n      return;\n    if (!((_d = this.meeting) === null || _d === void 0 ? void 0 : _d.self.permissions.plugins.canClose) &&\n      !((_e = this.meeting) === null || _e === void 0 ? void 0 : _e.self.permissions.plugins.canStart))\n      return;\n    return (h(Host, { title: text }, h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, t: this.t, class: { active: this.pluginsActive }, onClick: () => this.togglePlugins(), icon: this.iconPack.rocket, label: text, variant: this.variant })));\n  }\n  static get watchers() { return {\n    \"states\": [\"statesChanged\"]\n  }; }\n};\nDytePluginsToggle.style = dytePluginsToggleCss;\n\nexport { DytePluginsToggle as dyte_plugins_toggle };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DytePluginsToggle","hostRef","_classCallCheck","registerInstance","this","stateUpdate","createEvent","variant","meeting","undefined","states","size","iconPack","defaultIconPack","t","useLanguage","pluginsActive","_createClass","key","value","_this","statesChanged","onChange","s","state","activeSidebar","sidebar","emit","activeMoreMenu","_a","_b","_c","_d","_e","_this2","plugins","text","config","self","controlBar","elements","permissions","canClose","canStart","h","Host","title","part","class","active","onClick","togglePlugins","icon","rocket","label","get","style","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","length","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","setTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","n","done","set","filter","err","e","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elms","stencilSubscription","createStore"],"sourceRoot":""}