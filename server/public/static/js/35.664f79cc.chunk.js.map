{"version":3,"file":"static/js/35.664f79cc.chunk.js","mappings":"iOAQMA,EAAe,WACnB,SAAAA,EAAYC,GAAS,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAH,IACnBI,EAAAA,EAAAA,GAAiBC,KAAMJ,GACvBI,KAAKC,OAAQC,EAAAA,EAAAA,GAAYF,KAAM,QAAS,GACxCA,KAAKG,iBAAmB,SAACC,GACT,WAAVA,EAAEC,KACJR,EAAKI,MAAMK,MAEf,EACAN,KAAKO,mBAAqB,kBAAMV,EAAKI,MAAMK,MAAM,EACjDN,KAAKQ,WAAQC,EACbT,KAAKU,UAAOD,EACZT,KAAKW,GAAIC,EAAAA,EAAAA,KACTZ,KAAKa,SAAWC,EAAAA,CAClB,CAWC,OAXAC,EAAAA,EAAAA,GAAApB,EAAA,EAAAU,IAAA,oBAAAW,MACD,WACEC,SAASC,iBAAiB,UAAWlB,KAAKG,kBAC1Cc,SAASC,iBAAiB,QAASlB,KAAKO,mBAC1C,GAAC,CAAAF,IAAA,uBAAAW,MACD,WACEC,SAASE,oBAAoB,UAAWnB,KAAKG,kBAC7Cc,SAASE,oBAAoB,QAASnB,KAAKO,mBAC7C,GAAC,CAAAF,IAAA,SAAAW,MACD,WAAS,IAAAI,EAAA,KACP,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAO,YAAaC,QAAS,SAACpB,GAAC,OAAKA,EAAEqB,iBAAiB,IAAIJ,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,WAAYF,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,kBAAoBvB,KAAKW,EAAE,aAAc,KAAKU,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,gBAAiBG,EAAAA,EAAAA,IAAWC,EAAAA,EAAAA,GAAQ3B,KAAKQ,MAAMoB,iBAAiBP,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,YAAaF,EAAAA,EAAAA,GAAE,cAAe,CAAEQ,KAAM,OAAQC,QAAS,YAAaN,QAAS,kBAAMJ,EAAKnB,MAAMK,MAAM,EAAEO,SAAUb,KAAKa,SAAUF,EAAGX,KAAKW,IAAKU,EAAAA,EAAAA,GAAE,YAAa,CAAEU,KAAM/B,KAAKa,SAASmB,qBAAsBnB,SAAUb,KAAKa,SAAUF,EAAGX,KAAKW,MAAOU,EAAAA,EAAAA,GAAE,cAAe,CAAEG,QAAS,kBAAMS,EAAAA,EAAAA,GAAab,EAAKZ,MAAM0B,KAAM,CAAEC,aAAc,SAAU,EAAEtB,SAAUb,KAAKa,SAAUF,EAAGX,KAAKW,IAAKU,EAAAA,EAAAA,GAAE,YAAa,CAAEU,KAAM/B,KAAKa,SAASuB,SAAUC,KAAM,QAASxB,SAAUb,KAAKa,SAAUF,EAAGX,KAAKW,IAAM,eAAeU,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,cAAeF,EAAAA,EAAAA,GAAE,MAAO,CAAEiB,IAAKtC,KAAKQ,MAAM0B,QACnzB,KAACvC,CAAA,CAzBkB,GA2BrBA,EAAgB4C,MA7BW,snD,uICJrBC,EAAe,SAACC,GACpB,OAAOA,EAAKC,MAAM,KAAKC,KACzB,EAMMC,EAAc,SAAClC,GACnB,IAAKA,EACH,MAAO,MACT,IAAMmC,EAAIC,KAAKC,MAAMD,KAAKE,IAAItC,GAAQoC,KAAKE,IAAI,OAC/C,MAAO,GAAPC,QAAWvC,EAAIoC,KAAAI,IAAG,KAAQL,IAAGM,QAAQ,GAAE,KAAAF,OAAI,CAAC,IAAK,KAAM,KAAM,KAAM,MAAMJ,GAC3E,EAOMO,EAAc,SAAClB,GAA4B,IAAtBmB,EAAQC,UAAAC,OAAA,QAAA9C,IAAA6C,UAAA,GAAAA,UAAA,GAAG,OACpC,IACE,IACMb,EADM,IAAIe,IAAItB,GACHuB,SAASf,MAAM,KAAKC,MACrC,MAAgB,MAATF,EAAeA,EAAOY,CAC/B,CACA,MAAOK,GACL,OAAOL,CACT,CACF,EAMMpB,EAAY,eAAA0B,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO7B,EAAM8B,GAAO,IAAAvB,EAAAwB,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEkC,OADzErC,GAAOsC,EAAAA,EAAAA,GAAatC,GAChBO,EAAmB,OAAZuB,QAAgC,IAAZA,OAAqB,EAASA,EAAQvB,KAAI4B,EAAAE,KAAA,EACvDE,MAAMvC,GAAK,OAApB,IAAH+B,EAAGI,EAAAK,MACAC,GAAI,CAAFN,EAAAE,KAAA,QAGmB,OAA5BK,OAAOC,KAAK3C,EAAM,UAAUmC,EAAAS,OAAA,iBAGX,OAHWT,EAAAU,GAGdvB,IAAGa,EAAAE,KAAA,GAAuBN,EAAIe,OAAM,QAAAX,EAAAY,GAAAZ,EAAAK,KAA9CR,EAAOG,EAAAU,GAAOG,gBAAeC,KAAAd,EAAAU,GAAAV,EAAAY,KAE7Bd,EAAIlD,SAASmE,cAAc,MAC/BC,KAAOnB,EACTC,EAAE/B,SAAoB,OAATK,QAA0B,IAATA,EAAkBA,EAAOW,EAAYlB,EAAkB,OAAZ8B,QAAgC,IAAZA,OAAqB,EAASA,EAAQ7B,cACnIgC,EAAEmB,QAAQ,yBAAAjB,EAAAkB,OAAA,GAAAxB,EAAA,KACX,gBAhBiByB,EAAAC,GAAA,OAAA9B,EAAA+B,MAAA,KAAApC,UAAA,I,+GCjCZqC,EAAW,eAAAhC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO6B,GAAI,IAAA3B,EAAA,OAAAJ,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB,MAARqB,GAAyB,OAATA,GAAiC,KAAhBA,EAAKC,OAAa,CAAAxB,EAAAE,KAAA,eAAAF,EAAAS,OAAA,SAC9CgB,EAAAA,GAAe,cAAAzB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGJE,MAAM,GAADxB,OANL,wBAMsB,KAAAA,OAAI2C,EAAI,UAAQ,OAA/C,IAAH3B,EAAGI,EAAAK,MACAC,GAAI,CAAFN,EAAAE,KAAA,eAAAF,EAAAS,OAAA,SACFgB,EAAAA,GAAe,OAGgB,OAHhBzB,EAAAU,GAGjBgB,OAAM1B,EAAAY,GAAQ,CAAC,EAACZ,EAAA2B,GAAEF,EAAAA,EAAezB,EAAAE,KAAA,GAAQN,EAAIgC,OAAM,eAAA5B,EAAA6B,GAAA7B,EAAAK,KAAAL,EAAAS,OAAA,SAAAT,EAAAU,GAA5CoB,OAAMhB,KAAAd,EAAAU,GAAAV,EAAAY,GAAAZ,EAAA2B,GAAA3B,EAAA6B,KAAA,eAAA7B,EAAAC,KAAA,GAAAD,EAAA+B,GAAA/B,EAAA,SAAAA,EAAAS,OAAC,SAGdgB,EAAAA,GAAe,yBAAAzB,EAAAkB,OAAA,GAAAxB,EAAA,mBAEzB,gBAfgByB,GAAA,OAAA7B,EAAA+B,MAAA,KAAApC,UAAA,KAqBX1C,EAAc,WAA4B,IAA3BgF,EAAItC,UAAAC,OAAA,QAAA9C,IAAA6C,UAAA,GAAAA,UAAA,GAAGwC,EAAAA,EAC1B,OAAO,SAACzF,GACN,IAAIgG,EACJ,OAA4B,QAApBA,EAAKT,EAAKvF,UAAyB,IAAPgG,EAAgBA,EAAKhG,CAC3D,CACF,C,mJCxBA,IAAMsB,EAAU,SAAC2E,GAAwB,IAAnBC,EAASjD,UAAAC,OAAA,QAAA9C,IAAA6C,UAAA,GAAAA,UAAA,GAAG,GAChC,OAAW,MAAPgD,EACK,GACLA,EAAI/C,OAASgD,EACR,GAAPtD,OAAUqD,EAAIE,UAAU,EAAGD,GAAU,OAEhCD,CACT,EASMG,EAAgB,SAACH,GAGrB,MADW,87CACDI,KAAKJ,KAFH,QAEgBI,KAAKJ,EACnC,EACM9B,EAAe,SAACtC,GAEpB,OAAa,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAK2D,OAAOc,cAAcC,WAAW,gBAC5E,kBAEF1E,CACT,EAMMR,EAAa,SAACe,GAElB,MAAa,MADbA,EAAgB,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAKoD,QAE/C,cACFpD,CACT,EACA,SAASoE,EAAYpE,GAAuB,IAAjBqE,EAAWxD,UAAAC,OAAA,QAAA9C,IAAA6C,UAAA,GAAAA,UAAA,GAAG,EAIvC,OAFoBb,EAAKsE,QAAQ,qCAAsC,IAC7ClB,OAAOnD,MAAM,OAAOsE,MAAM,EAAGF,GAEpDG,KAAI,SAACC,GAAI,OAAKA,EAAKC,OAAO,EAAE,IAC5BC,KAAK,IACLC,aACL,C","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-image-viewer.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/file-82e7aeb9.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/string-8aa800b0.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { d as downloadFile } from './file-82e7aeb9.js';\nimport { f as formatName, s as shorten } from './string-8aa800b0.js';\n\nconst dyteImageViewerCss = \".scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{width:1140px;max-width:100%;box-sizing:border-box;display:flex;flex-direction:column;padding:var(--dyte-space-6, 24px);padding-top:var(--dyte-space-5, 20px);font-family:var(--dyte-font-family, sans-serif);overflow-y:auto;color:rgb(var(--dyte-colors-text-1000, 255 255 255));z-index:40;border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity))}.displayName{font-weight:700}.image-ctr{margin-top:var(--dyte-space-2, 8px);box-sizing:border-box;display:flex;justify-content:center;overflow:hidden}.actions{display:flex;align-items:center;justify-content:flex-end;gap:var(--dyte-space-2, 8px)}img{box-sizing:border-box;display:block;max-height:100%;max-width:100%;-o-object-fit:contain;object-fit:contain}.header{display:flex;align-items:center;justify-content:space-between;padding-bottom:var(--dyte-space-4, 16px)}.shared-by-user{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}:host([size='sm']) .header{flex-direction:column}:host([size='sm']) .header .actions{margin-top:var(--dyte-space-4, 16px)}\";\n\nconst DyteImageViewer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.close = createEvent(this, \"close\", 7);\n    this.keypressListener = (e) => {\n      if (e.key === 'Escape') {\n        this.close.emit();\n      }\n    };\n    this.handleOutsideClick = () => this.close.emit();\n    this.image = undefined;\n    this.size = undefined;\n    this.t = useLanguage();\n    this.iconPack = defaultIconPack;\n  }\n  connectedCallback() {\n    document.addEventListener('keydown', this.keypressListener);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n  disconnectedCallback() {\n    document.removeEventListener('keydown', this.keypressListener);\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n  render() {\n    return (h(Host, { class: \"scrollbar\", onClick: (e) => e.stopPropagation() }, h(\"div\", { class: \"header\" }, h(\"div\", { class: \"shared-by-user\" }, this.t('Shared by'), ' ', h(\"span\", { class: \"displayName\" }, formatName(shorten(this.image.displayName)))), h(\"div\", { class: \"actions\" }, h(\"dyte-button\", { kind: \"icon\", variant: \"secondary\", onClick: () => this.close.emit(), iconPack: this.iconPack, t: this.t }, h(\"dyte-icon\", { icon: this.iconPack.full_screen_minimize, iconPack: this.iconPack, t: this.t })), h(\"dyte-button\", { onClick: () => downloadFile(this.image.link, { fallbackName: 'image' }), iconPack: this.iconPack, t: this.t }, h(\"dyte-icon\", { icon: this.iconPack.download, slot: \"start\", iconPack: this.iconPack, t: this.t }), \"Download\"))), h(\"div\", { class: \"image-ctr\" }, h(\"img\", { src: this.image.link }))));\n  }\n};\nDyteImageViewer.style = dyteImageViewerCss;\n\nexport { DyteImageViewer as dyte_image_viewer };\n","import { a as sanitizeLink } from './string-8aa800b0.js';\n\nconst getExtension = (name) => {\n  return name.split('.').pop();\n};\n/**\n * Formats size in bytes to human readable formats\n * @param size Size in bytes\n * @returns Human readable file size\n */\nconst getFileSize = (size) => {\n  if (!size)\n    return '0 B';\n  const i = Math.floor(Math.log(size) / Math.log(1024));\n  return `${(size / 1024 ** i).toFixed(2)} ${['B', 'kB', 'MB', 'GB', 'TB'][i]}`;\n};\n/**\n * Extracts the file name from a URL.\n * @param link The URL of the file\n * @param fallback Fallback filename\n * @returns File name\n */\nconst getFileName = (link, fallback = 'file') => {\n  try {\n    const url = new URL(link);\n    const name = url.pathname.split('/').pop();\n    return name !== '/' ? name : fallback;\n  }\n  catch (_) {\n    return fallback;\n  }\n};\n/**\n * Downloads file from a given URL without leaving the current page\n * @param link URL of the file to download\n * @param options Optional Options for file download - `name` and `fallbackName`\n */\nconst downloadFile = async (link, options) => {\n  link = sanitizeLink(link);\n  let name = options === null || options === void 0 ? void 0 : options.name;\n  const res = await fetch(link);\n  if (!res.ok) {\n    // if unable to download file (CORS or some other error)\n    // open the URL in new tab\n    window.open(link, '_blank');\n    return;\n  }\n  const blobURL = URL.createObjectURL(await res.blob());\n  // Creates an anchor tag and simulates download\n  const a = document.createElement('a');\n  a.href = blobURL;\n  a.download = name !== null && name !== void 0 ? name : getFileName(link, options === null || options === void 0 ? void 0 : options.fallbackName);\n  a.click();\n};\n\nexport { getFileSize as a, downloadFile as d, getExtension as g };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","/**\n * Shorten a string upto a maximum length of characters and add `...` as suffix if it exceeds the maximum length\n * @param str The The string you want to shorten\n * @param maxLength Maximum length of character\n * @returns Formatted shortedned string\n */\nconst shorten = (str, maxLength = 20) => {\n  if (str == null)\n    return '';\n  if (str.length > maxLength) {\n    return `${str.substring(0, maxLength)}...`;\n  }\n  return str;\n};\n/**\n * Checks if a given string consists of only emojis.\n *\n * However this classifies a string with numbers as emoji as well.\n * Which works in our favour for now in chat as it enlarges messages with just numbers.\n * @param str String on which to perform the check on\n * @returns A Boolean value which indicates if string consists of only emojis\n */\nconst hasOnlyEmojis = (str) => {\n  const num = /^\\d+$/;\n  const re = /^\\p{Emoji}+$/u;\n  return re.test(str) && !num.test(str);\n};\nconst sanitizeLink = (link) => {\n  // TODO: needs more work\n  if (link === null || link === void 0 ? void 0 : link.trim().toLowerCase().startsWith('javascript:')) {\n    return 'https://dyte.io';\n  }\n  return link;\n};\n/**\n * Formats a given name and returns **Participant** for unnamed participants.\n * @param name Name of participant\n * @returns Name to use in the UI\n */\nconst formatName = (name) => {\n  name = name === null || name === void 0 ? void 0 : name.trim();\n  if (name === '')\n    return 'Participant';\n  return name;\n};\nfunction getInitials(name, maxInitials = 2) {\n  // removes any character that is not a letter, number or whitespace\n  const cleanedName = name.replace(/[^\\u00BF-\\u1FFF\\u2C00-\\uD7FF\\w\\s]/g, '');\n  const words = cleanedName.trim().split(/\\s+/).slice(0, maxInitials);\n  return words\n    .map((word) => word.charAt(0))\n    .join('')\n    .toUpperCase();\n}\n\nexport { sanitizeLink as a, formatName as f, getInitials as g, hasOnlyEmojis as h, shorten as s };\n"],"names":["DyteImageViewer","hostRef","_this","_classCallCheck","registerInstance","this","close","createEvent","keypressListener","e","key","emit","handleOutsideClick","image","undefined","size","t","useLanguage","iconPack","defaultIconPack","_createClass","value","document","addEventListener","removeEventListener","_this2","h","Host","class","onClick","stopPropagation","formatName","shorten","displayName","kind","variant","icon","full_screen_minimize","downloadFile","link","fallbackName","download","slot","src","style","getExtension","name","split","pop","getFileSize","i","Math","floor","log","concat","pow","toFixed","getFileName","fallback","arguments","length","URL","pathname","_","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","res","blobURL","a","wrap","_context","prev","next","sanitizeLink","fetch","sent","ok","window","open","abrupt","t0","blob","t1","createObjectURL","call","createElement","href","click","stop","_x","_x2","apply","getLangData","lang","trim","defaultLanguage","Object","t2","json","t3","assign","t4","_a","str","maxLength","substring","hasOnlyEmojis","test","toLowerCase","startsWith","getInitials","maxInitials","replace","slice","map","word","charAt","join","toUpperCase"],"sourceRoot":""}