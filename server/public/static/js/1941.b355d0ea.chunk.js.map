{"version":3,"file":"static/js/1941.b355d0ea.chunk.js","mappings":"gNAMMA,EAAc,WAClB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,YAASC,EACdF,KAAKG,SAAWC,EAAAA,EAChBJ,KAAKK,GAAIC,EAAAA,EAAAA,IACX,CAGC,OAHAC,EAAAA,EAAAA,GAAAX,EAAA,EAAAY,IAAA,SAAAC,MACD,WACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,OAAQ,MAAMA,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,MAAOC,KAAM,cAAeH,EAAAA,EAAAA,GAAE,YAAa,CAAET,OAAQD,KAAKC,OAAQY,KAAM,OAAQV,SAAUH,KAAKG,SAAUE,EAAGL,KAAKK,KAAMK,EAAAA,EAAAA,GAAE,eAAgB,CAAE,aAAc,iCAAkCG,KAAM,UAAWV,SAAUH,KAAKG,SAAUE,EAAGL,KAAKK,MACvS,KAACT,CAAA,CATiB,GAWpBA,EAAekB,MAbW,6d,+GCApBC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB,MAARL,GAAyB,OAATA,GAAiC,KAAhBA,EAAKM,OAAa,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAC9CC,EAAAA,GAAe,cAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGJI,MAAM,GAADC,OANL,wBAMsB,KAAAA,OAAIV,EAAI,UAAQ,OAA/C,IAAHC,EAAGE,EAAAQ,MACAC,GAAI,CAAFT,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SACFC,EAAAA,GAAe,OAGgB,OAHhBL,EAAAU,GAGjBC,OAAMX,EAAAY,GAAQ,CAAC,EAACZ,EAAAa,GAAER,EAAAA,EAAeL,EAAAE,KAAA,GAAQJ,EAAIgB,OAAM,eAAAd,EAAAe,GAAAf,EAAAQ,KAAAR,EAAAI,OAAA,SAAAJ,EAAAU,GAA5CM,OAAMC,KAAAjB,EAAAU,GAAAV,EAAAY,GAAAZ,EAAAa,GAAAb,EAAAe,KAAA,eAAAf,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAAAA,EAAAI,OAAC,SAGdC,EAAAA,GAAe,yBAAAL,EAAAmB,OAAA,GAAAvB,EAAA,mBAEzB,gBAfgBwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,KAqBXxC,EAAc,WAA4B,IAA3Be,EAAIyB,UAAAC,OAAA,QAAA7C,IAAA4C,UAAA,GAAAA,UAAA,GAAGjB,EAAAA,EAC1B,OAAO,SAACrB,GACN,IAAIwC,EACJ,OAA4B,QAApBA,EAAK3B,EAAKb,UAAyB,IAAPwC,EAAgBA,EAAKxC,CAC3D,CACF,C","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-idle-screen.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\n\nconst dyteIdleScreenCss = \":host{height:100%;width:100%;font-family:var(--dyte-font-family, sans-serif);display:flex;flex-direction:column;align-items:center;justify-content:center}.ctr{display:flex;flex-direction:column;align-items:center}dyte-logo{margin-bottom:var(--dyte-space-10, 40px);height:var(--dyte-space-12, 48px)}dyte-spinner{height:var(--dyte-space-12, 48px);width:var(--dyte-space-12, 48px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}\";\n\nconst DyteIdleScreen = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.config = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n  }\n  render() {\n    return (h(Host, null, h(\"slot\", null, h(\"div\", { class: \"ctr\", part: \"container\" }, h(\"dyte-logo\", { config: this.config, part: \"logo\", iconPack: this.iconPack, t: this.t }), h(\"dyte-spinner\", { \"aria-label\": \"Idle, waiting for meeting data\", part: \"spinner\", iconPack: this.iconPack, t: this.t })))));\n  }\n};\nDyteIdleScreen.style = dyteIdleScreenCss;\n\nexport { DyteIdleScreen as dyte_idle_screen };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n"],"names":["DyteIdleScreen","hostRef","_classCallCheck","registerInstance","this","config","undefined","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","h","Host","class","part","style","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","length","_a"],"sourceRoot":""}