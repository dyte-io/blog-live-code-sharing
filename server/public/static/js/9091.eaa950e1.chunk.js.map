{"version":3,"file":"static/js/9091.eaa950e1.chunk.js","mappings":"sPAQMA,EAAuB,WAC3B,MAA6B,qBAAdC,WACqB,qBAA3BA,UAAUC,cACjB,oBAAqBD,UAAUC,YACnC,EACMC,EAAqB,WACzB,SAAAA,EAAYC,GAAS,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAH,IACnBI,EAAAA,EAAAA,GAAiBC,KAAMJ,GACvBI,KAAKC,aAAcC,EAAAA,EAAAA,GAAYF,KAAM,kBAAmB,GACxDA,KAAKG,wBAA0B,SAAAC,GAA4B,IAAzBC,EAAkBD,EAAlBC,mBAChCR,EAAKQ,mBAAqBA,CAC5B,EACAL,KAAKM,oBAAsB,SAAAC,GAA4B,IAAzBF,EAAkBE,EAAlBF,mBACtBG,EAAeX,EAAKY,kBAAoBJ,EAAqB,GAAK,GACxER,EAAKY,iBAAmBC,KAAKC,IAAIH,EAAc,EACjD,EACAR,KAAKY,wBAA0B,SAAAC,GAAqBA,EAAlBR,qBAI9BR,EAAKY,iBAAmBC,KAAKC,IAAId,EAAKY,iBAAmB,EAAG,GAEhE,EACAT,KAAKc,sBAAwB,WAC3BjB,EAAKkB,iBAAiBlB,EAAKmB,QAC7B,EACAhB,KAAKiB,sBAAwB,WAC3BpB,EAAKqB,gBAAiB,CACxB,EACAlB,KAAKmB,8BAAgC,WACnCtB,EAAKkB,iBAAiBlB,EAAKmB,QAC7B,EACAhB,KAAKoB,6BAA+B,SAAAC,GAAuB,IAApBC,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QAC9B,gBAATD,IACFzB,EAAK2B,sBAAwBD,EAEjC,EACAvB,KAAKyB,uBAAyB,WAE5B,OAAO5B,EAAK6B,oBAAsB,GAAK7B,EAAKY,kBAAoBZ,EAAK6B,mBACvE,EACA1B,KAAK2B,kBAAoB,WACvB,IAAIC,EACEC,EAA+B,QAAvBD,EAAK/B,EAAKmB,eAA4B,IAAPY,OAAgB,EAASA,EAAGC,KAC7D,MAARA,IACDhC,EAAKqB,gBACNrB,EAAK4B,0BACL5B,EAAKiC,uBAGHD,EAAKxB,mBACPwB,EAAKE,qBAGLF,EAAKG,oBAEPnC,EAAKI,YAAYgC,KAAK,CAAEC,gBAAgB,IACxCC,EAAAA,EAAAA,gBAAuB,EACzB,EACAnC,KAAKoC,YAASC,EACdrC,KAAKsC,QAAU,SACftC,KAAKgB,aAAUqB,EACfrC,KAAKuC,UAAOF,EACZrC,KAAKwC,SAAWC,EAAAA,EAChBzC,KAAK0C,GAAIC,EAAAA,EAAAA,KACT3C,KAAK0B,qBAAuB,EAC5B1B,KAAKS,iBAAmB,EACxBT,KAAKK,oBAAqB,EAC1BL,KAAKkB,gBAAiB,EACtBlB,KAAKwB,sBAAwB,eAC/B,CAuGI,OAvGHoB,EAAAA,EAAAA,GAAAjD,EAAA,EAAAkD,IAAA,oBAAAC,MACD,WACOtD,IAILQ,KAAK+C,eAAe/C,KAAKgB,SAHvBgC,EAAAA,EAAAA,MAAa,mEAIjB,GAAC,CAAAH,IAAA,uBAAAC,MACD,WACE,IAAIlB,EAAIqB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACZ,QAAvB5B,EAAK5B,KAAKgB,eAA4B,IAAPY,GAAyBA,EAAG6B,aAAaC,OAAOC,eAAe,oBAAqB3D,KAAKM,qBACjG,QAAvB2C,EAAKjD,KAAKgB,eAA4B,IAAPiC,GAAyBA,EAAGQ,aAAaC,OAAOC,eAAe,kBAAmB3D,KAAKY,yBAC/F,QAAvBsC,EAAKlD,KAAKgB,eAA4B,IAAPkC,GAAyBA,EAAGrB,KAAK8B,eAAe,oBAAqB3D,KAAKG,yBAClF,QAAvBgD,EAAKnD,KAAKgB,eAA4B,IAAPmC,GAAyBA,EAAGtB,KAAK8B,eAAe,uBAAwB3D,KAAKoB,8BACrF,QAAvBgC,EAAKpD,KAAKgB,eAA4B,IAAPoC,GAAyBA,EAAGvB,KAAK8B,eAAe,2BAA4B3D,KAAKc,uBACzF,QAAvBuC,EAAKrD,KAAKgB,eAA4B,IAAPqC,GAAyBA,EAAGxB,KAAK8B,eAAe,2BAA4B3D,KAAKmB,+BACzF,QAAvBmC,EAAKtD,KAAKgB,eAA4B,IAAPsC,GAAyBA,EAAGzB,KAAK8B,eAAe,cAAe3D,KAAKc,uBAC5E,QAAvByC,EAAKvD,KAAKgB,eAA4B,IAAPuC,GAAyBA,EAAG1B,KAAK8B,eAAe,YAAa3D,KAAKiB,uBAC1E,QAAvBuC,EAAKxD,KAAKgB,eAA4B,IAAPwC,GAAyBA,EAAG3B,KAAK8B,eAAe,mBAAoB3D,KAAKc,sBAC3G,GAAC,CAAA+B,IAAA,iBAAAC,MACD,SAAe9B,GACb,GAAe,MAAXA,EAAiB,CACnB,IAAMa,EAAOb,EAAQa,KACrB7B,KAAKe,iBAAiBC,GACtBhB,KAAK0B,oBAAsBG,EAAK+B,OAAOlC,oBACvC1B,KAAKK,mBAAqBwB,EAAKxB,mBAC/B,IAC+DwD,EAD3DpD,EAAmB,EAAEqD,GAAAC,EAAAA,EAAAA,GACC/C,EAAQyC,aAAaC,OAAOM,WAAS,IAA/D,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAiE,CAA3CN,EAAAf,MACJzC,oBACdI,GAEJ,CAAC,OAAA2D,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACDtE,KAAKS,iBAAmBA,EACxBO,EAAQyC,aAAaC,OAAOa,YAAY,oBAAqBvE,KAAKM,qBAClEU,EAAQyC,aAAaC,OAAOa,YAAY,kBAAmBvE,KAAKY,yBAChEiB,EAAK0C,YAAY,oBAAqBvE,KAAKG,yBAC3C0B,EAAK0C,YAAY,uBAAwBvE,KAAKoB,8BAC9CS,EAAK0C,YAAY,2BAA4BvE,KAAKc,uBAClDe,EAAK0C,YAAY,2BAA4BvE,KAAKmB,+BAClDU,EAAK0C,YAAY,cAAevE,KAAKc,uBACrCe,EAAK0C,YAAY,YAAavE,KAAKiB,uBACnCY,EAAK0C,YAAY,mBAAoBvE,KAAKc,sBAC5C,CACF,GAAC,CAAA+B,IAAA,mBAAAC,MACD,SAAiB9B,GACf,IAAQa,EAAeb,EAAfa,KAAM2C,EAASxD,EAATwD,KACRC,EAAmE,YAA3C5C,EAAK6C,YAAYD,sBACzCE,EAA8B,YAAlBH,EAAKI,SAEvB,GADA5E,KAAKkB,gBAAiB,EAClBuD,EACFzE,KAAKkB,gBAAiB,OAEnB,GAAIyD,EAAW,GACuD,gBAA3C9C,EAAK6C,YAAYD,wBAGhB,aAA5B5C,EAAKgD,oBACwB,2BAA5BhD,EAAKgD,qBACP7E,KAAKkB,gBAAiB,EAE1B,CACF,GAAC,CAAA2B,IAAA,qBAAAC,MACD,WACE,MAAuC,kBAA/B9C,KAAKwB,uBACoB,oBAA/BxB,KAAKwB,qBACT,GAAC,CAAAqB,IAAA,WAAAC,MACD,WACE,IAAIgC,EAAe,GACfC,EAAQ,GACRC,EAAO,GACPC,EAAY,CAAC,EACXC,EAAWlF,KAAK8B,qBAChBqD,EAAenF,KAAKyB,yBAoB1B,OAnBIzB,KAAKK,qBAAuB6E,GAC9BH,EAAQ/E,KAAK0C,EAAE,qBACfsC,EAAOhF,KAAKwC,SAAS4C,kBACrBH,EAAU,aAAc,IAGxBF,EAAQ/E,KAAK0C,EAAE,sBACfsC,EAAOhF,KAAKwC,SAAS6C,oBAEY,kBAA/BrF,KAAKwB,uBACPsD,EAAe9E,KAAK0C,EAAE,mBACtBuC,EAAU,aAAc,GAGxBH,EAAeC,EAEbI,IACFL,EAAe9E,KAAK0C,EAAE,uCAEjB,CAAEoC,aAAAA,EAAcC,MAAAA,EAAOC,KAAAA,EAAMC,UAAAA,EAAWK,YAAaJ,GAAYC,EAC1E,GAAC,CAAAtC,IAAA,SAAAC,MACD,WACE,IAAKtD,MAA2BQ,KAAKkB,eACnC,OAAO,KAET,IAAAqE,EAA8DvF,KAAKwF,WAA3DV,EAAYS,EAAZT,aAAcC,EAAKQ,EAALR,MAAOC,EAAIO,EAAJP,KAAMC,EAASM,EAATN,UAAWK,EAAWC,EAAXD,YAC9C,OAAQG,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOZ,IAASU,EAAAA,EAAAA,GAAE,eAAgB,CAAEG,UAAW,MAAOtE,KAAM,QAASyD,MAAOD,EAAce,MAAO,IAAKC,KAAM,UAAWtD,SAAUxC,KAAKwC,SAAUE,EAAG1C,KAAK0C,IAAK+C,EAAAA,EAAAA,GAAE,yBAA0B,CAAEK,KAAM,oBAAqBvD,KAAMvC,KAAKuC,KAAMC,SAAUxC,KAAKwC,SAAUE,EAAG1C,KAAK0C,EAAGJ,QAAStC,KAAKsC,QAASyC,MAAOA,EAAOC,KAAMA,EAAMe,MAAOd,EAAWe,QAAShG,KAAK2B,kBAAmBsE,SAAUX,EAAaA,YAAaA,KACva,IAAC,EAAAzC,IAAA,WAAAqD,IACD,WAAwB,MAAO,CAC7B,QAAW,CAAC,kBACX,KAACvG,CAAA,CAxKqB,GA0K3BA,EAAsBwG,MAjLW,sE,+GCF3BC,EAAW,eAAAhG,GAAAiG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB,MAARL,GAAyB,OAATA,GAAiC,KAAhBA,EAAKM,OAAa,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAC9CC,EAAAA,GAAe,cAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGJI,MAAM,GAADC,OANL,wBAMsB,KAAAA,OAAIV,EAAI,UAAQ,OAA/C,IAAHC,EAAGE,EAAAQ,MACAC,GAAI,CAAFT,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SACFC,EAAAA,GAAe,OAGgB,OAHhBL,EAAAU,GAGjBC,OAAMX,EAAAY,GAAQ,CAAC,EAACZ,EAAAa,GAAER,EAAAA,EAAeL,EAAAE,KAAA,GAAQJ,EAAIgB,OAAM,eAAAd,EAAAe,GAAAf,EAAAQ,KAAAR,EAAAI,OAAA,SAAAJ,EAAAU,GAA5CM,OAAMC,KAAAjB,EAAAU,GAAAV,EAAAY,GAAAZ,EAAAa,GAAAb,EAAAe,KAAA,eAAAf,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAAAA,EAAAI,OAAC,SAGdC,EAAAA,GAAe,yBAAAL,EAAAmB,OAAA,GAAAvB,EAAA,mBAEzB,gBAfgBwB,GAAA,OAAA5H,EAAA6H,MAAA,KAAAC,UAAA,KAqBXvF,EAAc,WAA4B,IAA3B8D,EAAIyB,UAAAC,OAAA,QAAA9F,IAAA6F,UAAA,GAAAA,UAAA,GAAGjB,EAAAA,EAC1B,OAAO,SAACpE,GACN,IAAIjB,EACJ,OAA4B,QAApBA,EAAK6E,EAAK5D,UAAyB,IAAPjB,EAAgBA,EAAKiB,CAC3D,CACF,C,qGCGMuF,EAAc,SAACC,GAAY,QAAO,gBAAiBA,IAAiBA,EAAaD,WAAW,EAC5FE,EAvBW,SAACC,EAAIC,GAClB,IAAIC,EACJ,OAAO,WAAa,QAAAC,EAAAR,UAAAC,OAATQ,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAX,UAAAW,GACPJ,GACAK,aAAaL,GAEjBA,EAAYM,YAAW,WACnBN,EAAY,EACZF,EAAEN,WAAC,EAAGU,EACV,GAAGH,EACP,CACJ,CAYwBQ,EAAS,SAACC,GAAQ,IACZpF,EADYC,GAAAC,EAAAA,EAAAA,GACtBkF,EAAIC,QAAM,IAA1B,IAAApF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA4B,KAAnBtB,EAAGgB,EAAAf,MACRmG,EAAIE,IAAItG,EAAKoG,EAAI/C,IAAIrD,GAAKuG,OAAOhB,GACrC,CAAC,OAAAhE,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACL,GAAG,KA8BG+E,EAAS,SAACC,GAAG,MAAqB,oBAARA,EAAqBA,IAAQA,CAAG,EA+G1DC,EAAkB,SAACC,EAAOC,GAC5B,IAAMC,EAAQF,EAAMG,QAAQF,GACxBC,GAAS,IACTF,EAAME,GAASF,EAAMA,EAAMrB,OAAS,GACpCqB,EAAMrB,SAEd,EAQAyB,EANoB,SAACC,EAAcC,GAC/B,IAAMb,EAvHkB,SAACY,GAAmD,IAArCC,EAAY5B,UAAAC,OAAA,QAAA9F,IAAA6F,UAAA,GAAAA,UAAA,GAAG,SAAC6B,EAAGC,GAAC,OAAKD,IAAMC,CAAC,EACjEC,EAAiBZ,EAAOQ,GAC1BzH,EAAS,IAAI8H,IAAI3C,OAAO4C,QAA2B,OAAnBF,QAA8C,IAAnBA,EAA4BA,EAAiB,CAAC,IACvGG,EAAW,CACbC,QAAS,GACTnE,IAAK,GACLiD,IAAK,GACLmB,MAAO,IAELA,EAAQ,WACV,IAAI1I,EAGJQ,EAAS,IAAI8H,IAAI3C,OAAO4C,QAAwC,QAA/BvI,EAAKyH,EAAOQ,UAAkC,IAAPjI,EAAgBA,EAAK,CAAC,IAC9FwI,EAASE,MAAMC,SAAQ,SAACC,GAAE,OAAKA,GAAI,GACvC,EAOMtE,EAAM,SAACuE,GAET,OADAL,EAASlE,IAAIqE,SAAQ,SAACC,GAAE,OAAKA,EAAGC,EAAS,IAClCrI,EAAO8D,IAAIuE,EACtB,EACMtB,EAAM,SAACsB,EAAU3H,GACnB,IAAM4H,EAAWtI,EAAO8D,IAAIuE,GACxBX,EAAahH,EAAO4H,EAAUD,KAC9BrI,EAAO+G,IAAIsB,EAAU3H,GACrBsH,EAASjB,IAAIoB,SAAQ,SAACC,GAAE,OAAKA,EAAGC,EAAU3H,EAAO4H,EAAS,IAElE,EACMvI,EAA0B,qBAAVwI,MAChB,CAAC,EACD,IAAIA,MAAMV,EAAgB,CACxB/D,IAAG,SAAC0E,EAAGH,GACH,OAAOvE,EAAIuE,EACf,EACAI,QAAO,SAACD,GACJ,OAAOhC,MAAMkC,KAAK1I,EAAO8G,OAC7B,EACA6B,yBAAwB,WACpB,MAAO,CACHC,YAAY,EACZC,cAAc,EAEtB,EACAC,IAAG,SAACN,EAAGH,GACH,OAAOrI,EAAO8I,IAAIT,EACtB,EACAtB,IAAG,SAACyB,EAAGH,EAAU3H,GAEb,OADAqG,EAAIsB,EAAU3H,IACP,CACX,IAEFqI,EAAK,SAACC,EAAWC,GAEnB,OADAjB,EAASgB,GAAWE,KAAKD,GAClB,WACH9B,EAAgBa,EAASgB,GAAYC,EACzC,CACJ,EAqCA,MAAO,CACHlJ,MAAAA,EACA+D,IAAAA,EACAiD,IAAAA,EACAgC,GAAAA,EACAI,SAzCa,SAACd,EAAUD,GACxB,IAAMgB,EAAQL,EAAG,OAAO,SAACtI,EAAK4I,GACtB5I,IAAQ4H,GACRD,EAAGiB,EAEX,IAGMC,EAAUP,EAAG,SAAS,kBAAMX,EAAGnB,EAAOQ,GAAcY,GAAU,IACpE,OAAO,WACHe,IACAE,GACJ,CACJ,EA6BIC,IA5BQ,WAAsB,QAAAC,EAAA1D,UAAAC,OAAlB0D,EAAa,IAAAjD,MAAAgD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAbD,EAAaC,GAAA5D,UAAA4D,GACzB,IAAMC,EAASF,EAAcG,QAAO,SAACD,EAAQE,GAazC,OAZIA,EAAa9C,KACb4C,EAAOT,KAAKH,EAAG,MAAOc,EAAa9C,MAEnC8C,EAAa/F,KACb6F,EAAOT,KAAKH,EAAG,MAAOc,EAAa/F,MAEnC+F,EAAa3B,OACbyB,EAAOT,KAAKH,EAAG,QAASc,EAAa3B,QAErC2B,EAAa5B,SACb0B,EAAOT,KAAKH,EAAG,UAAWc,EAAa5B,UAEpC0B,CACX,GAAG,IACH,OAAO,kBAAMA,EAAOxB,SAAQ,SAAC2B,GAAK,OAAKA,GAAO,GAAC,CACnD,EAYI7B,QAzFY,WAGZD,EAASC,QAAQE,SAAQ,SAACC,GAAE,OAAKA,GAAI,IACrCF,GACJ,EAqFIA,MAAAA,EACA6B,YAbgB,SAACtJ,GACjB,IAAM6H,EAAWtI,EAAO8D,IAAIrD,GAC5BuH,EAASjB,IAAIoB,SAAQ,SAACC,GAAE,OAAKA,EAAG3H,EAAK6H,EAAUA,EAAS,GAC5D,EAYJ,CAUgB0B,CAAoBvC,EAAcC,GAE9C,OADAb,EAAI0C,IAtJoB,WACxB,GAA+B,oBAApBU,EAAAA,EAGP,MAAO,CAAC,EAEZ,IAAMC,EAAe,IAAIpC,IACzB,MAAO,CACHG,QAAS,kBAAMiC,EAAaC,OAAO,EACnCrG,IAAK,SAACuE,GACF,IAAM+B,GAAMH,EAAAA,EAAAA,KACRG,GAhDI,SAACvD,EAAKwB,EAAU3H,GAChC,IAAM2J,EAAQxD,EAAI/C,IAAIuE,GACjBgC,EAGKA,EAAMC,SAAS5J,IACrB2J,EAAMnB,KAAKxI,GAHXmG,EAAIE,IAAIsB,EAAU,CAAC3H,GAK3B,CAyCgB6J,CAAYL,EAAc7B,EAAU+B,EAE5C,EACArD,IAAK,SAACsB,GACF,IAAMmC,EAAWN,EAAapG,IAAIuE,GAC9BmC,GACAN,EAAanD,IAAIsB,EAAUmC,EAASxD,OAAO+C,EAAAA,IAE/C7D,EAAgBgE,EACpB,EACAhC,MAAO,WACHgC,EAAa/B,SAAQ,SAACsC,GAAI,OAAKA,EAAKtC,QAAQ4B,EAAAA,EAAY,IACxD7D,EAAgBgE,EACpB,EAER,CA2HYQ,IACD7D,CACX,CAE4B8D,CAAY,CAAC,GAAjC5K,EAAKyH,EAALzH,MAAOoJ,EAAQ3B,EAAR2B,Q","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-screen-share-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { l as logger } from './logger-8eaa31ac.js';\nimport { s as state } from './store-183b9cab.js';\n\nconst dyteScreenShareToggleCss = \":host{display:block;font-family:var(--dyte-font-family, sans-serif)}\";\n\nconst deviceCanScreenShare = () => {\n  return (typeof navigator !== 'undefined' &&\n    typeof navigator.mediaDevices !== 'undefined' &&\n    'getDisplayMedia' in navigator.mediaDevices);\n};\nconst DyteScreenShareToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.selfScreenShareListener = ({ screenShareEnabled }) => {\n      this.screenShareEnabled = screenShareEnabled;\n    };\n    this.screenShareListener = ({ screenShareEnabled }) => {\n      const currentCount = this.screenShareCount + (screenShareEnabled ? 1 : -1);\n      this.screenShareCount = Math.max(currentCount, 0);\n    };\n    this.participantLeftListener = ({ screenShareEnabled }) => {\n      if (screenShareEnabled) {\n        // decrement count if participant who left had screenShareEnabled\n        // and don't let it go below 0 (just a failsafe)\n        this.screenShareCount = Math.max(this.screenShareCount - 1, 0);\n      }\n    };\n    this.selfJoinStateListener = () => {\n      this.updateCanProduce(this.meeting);\n    };\n    this.selfStageLeftListener = () => {\n      this.canScreenShare = false;\n    };\n    this.selfJoinStateRejectedListener = () => {\n      this.updateCanProduce(this.meeting);\n    };\n    this.mediaPermissionErrorListener = ({ kind, message }) => {\n      if (kind === 'screenshare') {\n        this.shareScreenPermission = message;\n      }\n    };\n    this.reachedMaxScreenShares = () => {\n      // checks if a limit exists, and if limit is reached\n      return this.maxScreenShareCount > 0 && this.screenShareCount >= this.maxScreenShareCount;\n    };\n    this.toggleScreenShare = () => {\n      var _a;\n      const self = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self;\n      if (self == null ||\n        !this.canScreenShare ||\n        this.reachedMaxScreenShares() ||\n        this.hasPermissionError()) {\n        return;\n      }\n      if (self.screenShareEnabled) {\n        self.disableScreenShare();\n      }\n      else {\n        self.enableScreenShare();\n      }\n      this.stateUpdate.emit({ activeMoreMenu: false });\n      state.activeMoreMenu = false;\n    };\n    this.states = undefined;\n    this.variant = 'button';\n    this.meeting = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.maxScreenShareCount = -1;\n    this.screenShareCount = 0;\n    this.screenShareEnabled = false;\n    this.canScreenShare = false;\n    this.shareScreenPermission = 'NOT_REQUESTED';\n  }\n  connectedCallback() {\n    if (!deviceCanScreenShare()) {\n      logger.error('[dyte-screenshare-toggle] Device does not support screensharing.');\n      return;\n    }\n    this.meetingChanged(this.meeting);\n  }\n  disconnectedCallback() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.participants.joined.removeListener('screenShareUpdate', this.screenShareListener);\n    (_b = this.meeting) === null || _b === void 0 ? void 0 : _b.participants.joined.removeListener('participantLeft', this.participantLeftListener);\n    (_c = this.meeting) === null || _c === void 0 ? void 0 : _c.self.removeListener('screenShareUpdate', this.selfScreenShareListener);\n    (_d = this.meeting) === null || _d === void 0 ? void 0 : _d.self.removeListener('mediaPermissionError', this.mediaPermissionErrorListener);\n    (_e = this.meeting) === null || _e === void 0 ? void 0 : _e.self.removeListener('joinStageRequestAccepted', this.selfJoinStateListener);\n    (_f = this.meeting) === null || _f === void 0 ? void 0 : _f.self.removeListener('joinStageRequestRejected', this.selfJoinStateRejectedListener);\n    (_g = this.meeting) === null || _g === void 0 ? void 0 : _g.self.removeListener('stageJoined', this.selfJoinStateListener);\n    (_h = this.meeting) === null || _h === void 0 ? void 0 : _h.self.removeListener('stageLeft', this.selfStageLeftListener);\n    (_j = this.meeting) === null || _j === void 0 ? void 0 : _j.self.removeListener('removedFromStage', this.selfJoinStateListener);\n  }\n  meetingChanged(meeting) {\n    if (meeting != null) {\n      const self = meeting.self;\n      this.updateCanProduce(meeting);\n      this.maxScreenShareCount = self.config.maxScreenShareCount;\n      this.screenShareEnabled = self.screenShareEnabled;\n      let screenShareCount = 0;\n      for (const participant of meeting.participants.joined.toArray()) {\n        if (participant.screenShareEnabled) {\n          screenShareCount++;\n        }\n      }\n      this.screenShareCount = screenShareCount;\n      meeting.participants.joined.addListener('screenShareUpdate', this.screenShareListener);\n      meeting.participants.joined.addListener('participantLeft', this.participantLeftListener);\n      self.addListener('screenShareUpdate', this.selfScreenShareListener);\n      self.addListener('mediaPermissionError', this.mediaPermissionErrorListener);\n      self.addListener('joinStageRequestAccepted', this.selfJoinStateListener);\n      self.addListener('joinStageRequestRejected', this.selfJoinStateRejectedListener);\n      self.addListener('stageJoined', this.selfJoinStateListener);\n      self.addListener('stageLeft', this.selfStageLeftListener);\n      self.addListener('removedFromStage', this.selfJoinStateListener);\n    }\n  }\n  updateCanProduce(meeting) {\n    const { self, meta } = meeting;\n    const canProduceScreenshare = self.permissions.canProduceScreenshare === 'ALLOWED';\n    const isWebinar = meta.viewType === 'WEBINAR';\n    this.canScreenShare = false;\n    if (canProduceScreenshare) {\n      this.canScreenShare = true;\n    }\n    else if (isWebinar) {\n      const canRequestScreenshare = self.permissions.canProduceScreenshare === 'CAN_REQUEST';\n      // If the peer has approved request to present\n      if (canRequestScreenshare &&\n        (self.webinarStageStatus === 'ON_STAGE' ||\n          self.webinarStageStatus === 'ACCEPTED_TO_JOIN_STAGE')) {\n        this.canScreenShare = true;\n      }\n    }\n  }\n  hasPermissionError() {\n    return (this.shareScreenPermission === 'SYSTEM_DENIED' ||\n      this.shareScreenPermission === 'COULD_NOT_START');\n  }\n  getState() {\n    let tooltipLabel = '';\n    let label = '';\n    let icon = '';\n    let classList = {};\n    const hasError = this.hasPermissionError();\n    const limitReached = this.reachedMaxScreenShares();\n    if (this.screenShareEnabled && !hasError) {\n      label = this.t('share_screen_stop');\n      icon = this.iconPack.share_screen_stop;\n      classList['red-icon'] = true;\n    }\n    else {\n      label = this.t('share_screen_start');\n      icon = this.iconPack.share_screen_start;\n    }\n    if (this.shareScreenPermission === 'SYSTEM_DENIED') {\n      tooltipLabel = this.t('perm_sys_denied');\n      classList['red-icon'] = true;\n    }\n    else {\n      tooltipLabel = label;\n    }\n    if (limitReached) {\n      tooltipLabel = this.t('Maximum screen share limit reached');\n    }\n    return { tooltipLabel, label, icon, classList, showWarning: hasError || limitReached };\n  }\n  render() {\n    if (!deviceCanScreenShare() || !this.canScreenShare) {\n      return null;\n    }\n    const { tooltipLabel, label, icon, classList, showWarning } = this.getState();\n    return (h(Host, { title: label }, h(\"dyte-tooltip\", { placement: \"top\", kind: \"block\", label: tooltipLabel, delay: 600, part: \"tooltip\", iconPack: this.iconPack, t: this.t }, h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, t: this.t, variant: this.variant, label: label, icon: icon, class: classList, onClick: this.toggleScreenShare, disabled: showWarning, showWarning: showWarning }))));\n  }\n  static get watchers() { return {\n    \"meeting\": [\"meetingChanged\"]\n  }; }\n};\nDyteScreenShareToggle.style = dyteScreenShareToggleCss;\n\nexport { DyteScreenShareToggle as dyte_screen_share_toggle };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["deviceCanScreenShare","navigator","mediaDevices","DyteScreenShareToggle","hostRef","_this","_classCallCheck","registerInstance","this","stateUpdate","createEvent","selfScreenShareListener","_ref","screenShareEnabled","screenShareListener","_ref2","currentCount","screenShareCount","Math","max","participantLeftListener","_ref3","selfJoinStateListener","updateCanProduce","meeting","selfStageLeftListener","canScreenShare","selfJoinStateRejectedListener","mediaPermissionErrorListener","_ref4","kind","message","shareScreenPermission","reachedMaxScreenShares","maxScreenShareCount","toggleScreenShare","_a","self","hasPermissionError","disableScreenShare","enableScreenShare","emit","activeMoreMenu","state","states","undefined","variant","size","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","meetingChanged","logger","_b","_c","_d","_e","_f","_g","_h","_j","participants","joined","removeListener","config","_step","_iterator","_createForOfIteratorHelper","toArray","s","n","done","err","e","f","addListener","meta","canProduceScreenshare","permissions","isWebinar","viewType","webinarStageStatus","tooltipLabel","label","icon","classList","hasError","limitReached","share_screen_stop","share_screen_start","showWarning","_this$getState","getState","h","Host","title","placement","delay","part","class","onClick","disabled","get","style","getLangData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","length","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","setTimeout","debounce","map","keys","set","filter","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","onChange","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elements","elms","stencilSubscription","createStore"],"sourceRoot":""}