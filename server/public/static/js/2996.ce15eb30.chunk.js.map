{"version":3,"file":"static/js/2996.ce15eb30.chunk.js","mappings":"2NAOMA,EAAe,WACnB,SAAAA,EAAYC,GAAS,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAH,IACnBI,EAAAA,EAAAA,GAAiBC,KAAMJ,GACvBI,KAAKC,aAAcC,EAAAA,EAAAA,GAAYF,KAAM,kBAAmB,GACxDA,KAAKG,cAAgB,SAAAC,IACH,IADaA,EAAPC,UAEpBR,EAAKS,kBAAoB,EAC7B,EACAN,KAAKO,QAAU,SACfP,KAAKQ,aAAUC,EACfT,KAAKU,YAASD,EACdT,KAAKW,UAAOF,EACZT,KAAKY,SAAWC,EAAAA,EAChBb,KAAKc,GAAIC,EAAAA,EAAAA,KACTf,KAAKgB,aAAc,EACnBhB,KAAKM,iBAAmB,CAC1B,CAqDI,OArDHW,EAAAA,EAAAA,GAAAtB,EAAA,EAAAuB,IAAA,oBAAAC,MACD,WAAoB,IAAAC,EAAA,KAClBpB,KAAKqB,eAAerB,KAAKQ,SACzBR,KAAKsB,cAActB,KAAKU,SACxBa,EAAAA,EAAAA,GAAS,WAAW,kBAAMH,EAAKE,eAAe,GAChD,GAAC,CAAAJ,IAAA,uBAAAC,MACD,WACE,IAAIK,EAC0B,QAA7BA,EAAKxB,KAAKQ,QAAQiB,aAA0B,IAAPD,GAAyBA,EAAGE,eAAe,cAAe1B,KAAKG,cACvG,GAAC,CAAAe,IAAA,iBAAAC,MACD,SAAeX,GACTA,GAAWA,EAAQiB,QACrBzB,KAAKM,iBAAmBE,EAAQiB,MAAME,MAAMC,OAC5C5B,KAAKQ,QAAQiB,MAAMI,YAAY,cAAe7B,KAAKG,eAEvD,GAAC,CAAAe,IAAA,gBAAAC,MACD,SAAcW,GACZ,IAAMpB,EAASoB,GAAKC,EAAAA,EACN,MAAVrB,IACFV,KAAKgB,aAAuC,IAAzBN,EAAOsB,eAA6C,UAAnBtB,EAAOuB,QAE/D,GAAC,CAAAf,IAAA,iBAAAC,MACD,WACE,IAAMT,EAASV,KAAKU,QAAUqB,EAAAA,EAC9B/B,KAAKM,iBAAmB,EACxBN,KAAKgB,eAA4B,OAAXN,QAA8B,IAAXA,OAAoB,EAASA,EAAOsB,gBAAuF,WAAzD,OAAXtB,QAA8B,IAAXA,OAAoB,EAASA,EAAOuB,UACvJjC,KAAKC,YAAYiC,KAAK,CACpBF,cAAehC,KAAKgB,YACpBiB,QAASjC,KAAKgB,YAAc,QAAU,OACtCmB,gBAAgB,IAElBJ,EAAAA,EAAAA,cAAsB/B,KAAKgB,YAC3Be,EAAAA,EAAAA,QAAgB/B,KAAKgB,YAAc,QAAU,OAC7Ce,EAAAA,EAAAA,gBAAuB,CACzB,GAAC,CAAAb,IAAA,SAAAC,MACD,WAAS,IACHK,EAAIY,EAAIC,EAAIC,EAAIC,EADbC,EAAA,KAEP,IAAIxC,KAAKQ,SAAYR,KAAKQ,QAAQiB,MAAlC,CAEA,IAAMgB,EAAOzC,KAAKc,EAAE,SAGpB,IAAyF,QAAlFsB,EAA6B,QAAvBZ,EAAKxB,KAAKQ,eAA4B,IAAPgB,OAAgB,EAASA,EAAGkB,KAAKC,cAA2B,IAAPP,OAAgB,EAASA,EAAGQ,WAAWC,SAASpB,UAEnH,QAAvBY,EAAKrC,KAAKQ,eAA4B,IAAP6B,OAAgB,EAASA,EAAGK,KAAKI,YAAYrB,MAAMsB,aAC7D,QAAvBT,EAAKtC,KAAKQ,eAA4B,IAAP8B,OAAgB,EAASA,EAAGI,KAAKI,YAAYrB,MAAMuB,WAC3D,QAAvBT,EAAKvC,KAAKQ,eAA4B,IAAP+B,OAAgB,EAASA,EAAGG,KAAKI,YAAYrB,MAAMwB,UAEvF,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOX,GAAkC,IAA1BzC,KAAKM,mBAA2BN,KAAKgB,cAAgBkC,EAAAA,EAAAA,GAAE,MAAO,CAAEG,MAAO,eAAgBC,KAAM,iBAAkBJ,EAAAA,EAAAA,GAAE,OAAQ,KAAMlD,KAAKM,kBAAoB,IAAMN,KAAKM,iBAAmB,SAAU4C,EAAAA,EAAAA,GAAE,yBAA0B,CAAEI,KAAM,oBAAqB3C,KAAMX,KAAKW,KAAMC,SAAUZ,KAAKY,SAAUE,EAAGd,KAAKc,EAAGuC,MAAO,CAAEE,OAAQvD,KAAKgB,aAAewC,QAAS,kBAAMhB,EAAKiB,gBAAgB,EAAEC,KAAM1D,KAAKY,SAAS+C,KAAMC,MAAOnB,EAAMlC,QAASP,KAAKO,UAVvc,CAWV,IAAC,EAAAW,IAAA,WAAA2C,IACD,WAAwB,MAAO,CAC7B,QAAW,CAAC,kBACZ,OAAU,CAAC,iBACV,KAAClE,CAAA,CArEe,GAuErBA,EAAgBmE,MAzEW,mtB,+GCDrBC,EAAW,eAAA3D,GAAA4D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB,MAARL,GAAyB,OAATA,GAAiC,KAAhBA,EAAKM,OAAa,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAC9CC,EAAAA,GAAe,cAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGJI,MAAM,GAADC,OANL,wBAMsB,KAAAA,OAAIV,EAAI,UAAQ,OAA/C,IAAHC,EAAGE,EAAAQ,MACAC,GAAI,CAAFT,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SACFC,EAAAA,GAAe,OAGgB,OAHhBL,EAAAU,GAGjBC,OAAMX,EAAAY,GAAQ,CAAC,EAACZ,EAAAa,GAAER,EAAAA,EAAeL,EAAAE,KAAA,GAAQJ,EAAIgB,OAAM,eAAAd,EAAAe,GAAAf,EAAAQ,KAAAR,EAAAI,OAAA,SAAAJ,EAAAU,GAA5CM,OAAMC,KAAAjB,EAAAU,GAAAV,EAAAY,GAAAZ,EAAAa,GAAAb,EAAAe,KAAA,eAAAf,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAAAA,EAAAI,OAAC,SAGdC,EAAAA,GAAe,yBAAAL,EAAAmB,OAAA,GAAAvB,EAAA,mBAEzB,gBAfgBwB,GAAA,OAAAvF,EAAAwF,MAAA,KAAAC,UAAA,KAqBX9E,EAAc,WAA4B,IAA3BqD,EAAIyB,UAAAjE,OAAA,QAAAnB,IAAAoF,UAAA,GAAAA,UAAA,GAAGjB,EAAAA,EAC1B,OAAO,SAAC1D,GACN,IAAIM,EACJ,OAA4B,QAApBA,EAAK4C,EAAKlD,UAAyB,IAAPM,EAAgBA,EAAKN,CAC3D,CACF,C,qGCGM4E,EAAc,SAACC,GAAY,QAAO,gBAAiBA,IAAiBA,EAAaD,WAAW,EAC5FE,EAvBW,SAACC,EAAIC,GAClB,IAAIC,EACJ,OAAO,WAAa,QAAAC,EAAAP,UAAAjE,OAATyE,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAV,UAAAU,GACPJ,GACAK,aAAaL,GAEjBA,EAAYM,YAAW,WACnBN,EAAY,EACZF,EAAEL,WAAC,EAAGS,EACV,GAAGH,EACP,CACJ,CAYwBQ,EAAS,SAACC,GAAQ,IACZC,EADYC,GAAAC,EAAAA,EAAAA,GACtBH,EAAII,QAAM,IAA1B,IAAAF,EAAA/E,MAAA8E,EAAAC,EAAAG,KAAAC,MAA4B,KAAnB/F,EAAG0F,EAAAzF,MACRwF,EAAIO,IAAIhG,EAAKyF,EAAI9C,IAAI3C,GAAKiG,OAAOrB,GACrC,CAAC,OAAAsB,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACL,GAAG,KA8BGC,EAAS,SAACC,GAAG,MAAqB,oBAARA,EAAqBA,IAAQA,CAAG,EA+G1DC,EAAkB,SAACC,EAAOC,GAC5B,IAAMC,EAAQF,EAAMG,QAAQF,GACxBC,GAAS,IACTF,EAAME,GAASF,EAAMA,EAAM9F,OAAS,GACpC8F,EAAM9F,SAEd,EAQAkG,EANoB,SAACC,EAAcC,GAC/B,IAAMrB,EAvHkB,SAACoB,GAAmD,IAArCC,EAAYnC,UAAAjE,OAAA,QAAAnB,IAAAoF,UAAA,GAAAA,UAAA,GAAG,SAACoC,EAAGC,GAAC,OAAKD,IAAMC,CAAC,EACjEC,EAAiBZ,EAAOQ,GAC1BrH,EAAS,IAAI0H,IAAIlD,OAAOmD,QAA2B,OAAnBF,QAA8C,IAAnBA,EAA4BA,EAAiB,CAAC,IACvGG,EAAW,CACbC,QAAS,GACT1E,IAAK,GACLqD,IAAK,GACLsB,MAAO,IAELA,EAAQ,WACV,IAAIhH,EAGJd,EAAS,IAAI0H,IAAIlD,OAAOmD,QAAwC,QAA/B7G,EAAK+F,EAAOQ,UAAkC,IAAPvG,EAAgBA,EAAK,CAAC,IAC9F8G,EAASE,MAAMC,SAAQ,SAACC,GAAE,OAAKA,GAAI,GACvC,EAOM7E,EAAM,SAAC8E,GAET,OADAL,EAASzE,IAAI4E,SAAQ,SAACC,GAAE,OAAKA,EAAGC,EAAS,IAClCjI,EAAOmD,IAAI8E,EACtB,EACMzB,EAAM,SAACyB,EAAUxH,GACnB,IAAMyH,EAAWlI,EAAOmD,IAAI8E,GACxBX,EAAa7G,EAAOyH,EAAUD,KAC9BjI,EAAOwG,IAAIyB,EAAUxH,GACrBmH,EAASpB,IAAIuB,SAAQ,SAACC,GAAE,OAAKA,EAAGC,EAAUxH,EAAOyH,EAAS,IAElE,EACM7G,EAA0B,qBAAV8G,MAChB,CAAC,EACD,IAAIA,MAAMV,EAAgB,CACxBtE,IAAG,SAACiF,EAAGH,GACH,OAAO9E,EAAI8E,EACf,EACAI,QAAO,SAACD,GACJ,OAAOxC,MAAM0C,KAAKtI,EAAOqG,OAC7B,EACAkC,yBAAwB,WACpB,MAAO,CACHC,YAAY,EACZC,cAAc,EAEtB,EACAC,IAAG,SAACN,EAAGH,GACH,OAAOjI,EAAO0I,IAAIT,EACtB,EACAzB,IAAG,SAAC4B,EAAGH,EAAUxH,GAEb,OADA+F,EAAIyB,EAAUxH,IACP,CACX,IAEFkI,EAAK,SAACC,EAAWC,GAEnB,OADAjB,EAASgB,GAAWE,KAAKD,GAClB,WACH9B,EAAgBa,EAASgB,GAAYC,EACzC,CACJ,EAqCA,MAAO,CACHxH,MAAAA,EACA8B,IAAAA,EACAqD,IAAAA,EACAmC,GAAAA,EACA9H,SAzCa,SAACoH,EAAUD,GACxB,IAAMe,EAAQJ,EAAG,OAAO,SAACnI,EAAKwI,GACtBxI,IAAQyH,GACRD,EAAGgB,EAEX,IAGMC,EAAUN,EAAG,SAAS,kBAAMX,EAAGnB,EAAOQ,GAAcY,GAAU,IACpE,OAAO,WACHc,IACAE,GACJ,CACJ,EA6BIC,IA5BQ,WAAsB,QAAAC,EAAAhE,UAAAjE,OAAlBkI,EAAa,IAAAxD,MAAAuD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAbD,EAAaC,GAAAlE,UAAAkE,GACzB,IAAMC,EAASF,EAAcG,QAAO,SAACD,EAAQE,GAazC,OAZIA,EAAahD,KACb8C,EAAOR,KAAKH,EAAG,MAAOa,EAAahD,MAEnCgD,EAAarG,KACbmG,EAAOR,KAAKH,EAAG,MAAOa,EAAarG,MAEnCqG,EAAa1B,OACbwB,EAAOR,KAAKH,EAAG,QAASa,EAAa1B,QAErC0B,EAAa3B,SACbyB,EAAOR,KAAKH,EAAG,UAAWa,EAAa3B,UAEpCyB,CACX,GAAG,IACH,OAAO,kBAAMA,EAAOvB,SAAQ,SAAC0B,GAAK,OAAKA,GAAO,GAAC,CACnD,EAYI5B,QAzFY,WAGZD,EAASC,QAAQE,SAAQ,SAACC,GAAE,OAAKA,GAAI,IACrCF,GACJ,EAqFIA,MAAAA,EACA4B,YAbgB,SAAClJ,GACjB,IAAM0H,EAAWlI,EAAOmD,IAAI3C,GAC5BoH,EAASpB,IAAIuB,SAAQ,SAACC,GAAE,OAAKA,EAAGxH,EAAK0H,EAAUA,EAAS,GAC5D,EAYJ,CAUgByB,CAAoBtC,EAAcC,GAE9C,OADArB,EAAIiD,IAtJoB,WACxB,GAA+B,oBAApBU,EAAAA,EAGP,MAAO,CAAC,EAEZ,IAAMC,EAAe,IAAInC,IACzB,MAAO,CACHG,QAAS,kBAAMgC,EAAaC,OAAO,EACnC3G,IAAK,SAAC8E,GACF,IAAM8B,GAAMH,EAAAA,EAAAA,KACRG,GAhDI,SAAC9D,EAAKgC,EAAUxH,GAChC,IAAMQ,EAAQgF,EAAI9C,IAAI8E,GACjBhH,EAGKA,EAAM+I,SAASvJ,IACrBQ,EAAM6H,KAAKrI,GAHXwF,EAAIO,IAAIyB,EAAU,CAACxH,GAK3B,CAyCgBwJ,CAAYJ,EAAc5B,EAAU8B,EAE5C,EACAvD,IAAK,SAACyB,GACF,IAAM9F,EAAW0H,EAAa1G,IAAI8E,GAC9B9F,GACA0H,EAAarD,IAAIyB,EAAU9F,EAASsE,OAAOiD,EAAAA,IAE/CpE,EAAgBuE,EACpB,EACA/B,MAAO,WACH+B,EAAa9B,SAAQ,SAACmC,GAAI,OAAKA,EAAKnC,QAAQ2B,EAAAA,EAAY,IACxDpE,EAAgBuE,EACpB,EAER,CA2HYM,IACDlE,CACX,CAE4BmE,CAAY,CAAC,GAAjC/I,EAAK+F,EAAL/F,MAAOR,EAAQuG,EAARvG,Q","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-polls-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { o as onChange, s as state } from './store-183b9cab.js';\n\nconst dytePollsToggleCss = \":host{position:relative;display:block;font-family:var(--dyte-font-family, sans-serif)}.unread-count{position:absolute;right:var(--dyte-space-3, 12px);box-sizing:border-box;padding:var(--dyte-space-0\\\\.5, 2px);-webkit-user-select:none;-moz-user-select:none;user-select:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px;display:flex;height:var(--dyte-space-5, 20px);min-width:var(--dyte-space-5, 20px);align-items:center;justify-content:center;border-radius:9999px;z-index:1}:host([variant='horizontal']){display:flex;flex-direction:row-reverse;align-items:center}:host([variant='horizontal']) .unread-count{right:var(--dyte-space-4, 16px);top:auto}\";\n\nconst DytePollsToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.onPollsUpdate = ({ newPoll }) => {\n      if (newPoll === true)\n        this.unreadPollsCount += 1;\n    };\n    this.variant = 'button';\n    this.meeting = undefined;\n    this.states = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.pollsActive = false;\n    this.unreadPollsCount = 0;\n  }\n  connectedCallback() {\n    this.meetingChanged(this.meeting);\n    this.statesChanged(this.states);\n    onChange('sidebar', () => this.statesChanged());\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.meeting.polls) === null || _a === void 0 ? void 0 : _a.removeListener('pollsUpdate', this.onPollsUpdate);\n  }\n  meetingChanged(meeting) {\n    if (meeting && meeting.polls) {\n      this.unreadPollsCount = meeting.polls.items.length;\n      this.meeting.polls.addListener('pollsUpdate', this.onPollsUpdate);\n    }\n  }\n  statesChanged(s) {\n    const states = s || state;\n    if (states != null) {\n      this.pollsActive = states.activeSidebar === true && states.sidebar === 'polls';\n    }\n  }\n  togglePollsTab() {\n    const states = this.states || state;\n    this.unreadPollsCount = 0;\n    this.pollsActive = !((states === null || states === void 0 ? void 0 : states.activeSidebar) && (states === null || states === void 0 ? void 0 : states.sidebar) === 'polls');\n    this.stateUpdate.emit({\n      activeSidebar: this.pollsActive,\n      sidebar: this.pollsActive ? 'polls' : 'none',\n      activeMoreMenu: false,\n    });\n    state.activeSidebar = this.pollsActive;\n    state.sidebar = this.pollsActive ? 'polls' : 'none';\n    state.activeMoreMenu = false;\n  }\n  render() {\n    var _a, _b, _c, _d, _e;\n    if (this.meeting && !this.meeting.polls)\n      return;\n    const text = this.t('polls');\n    // TODO(callmetarush): Just showing polls for all V2 users irrespective of themes\n    // untill we get ui theme for V2.\n    if (!((_b = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self.config) === null || _b === void 0 ? void 0 : _b.controlBar.elements.polls))\n      return;\n    if (!((_c = this.meeting) === null || _c === void 0 ? void 0 : _c.self.permissions.polls.canCreate) &&\n      !((_d = this.meeting) === null || _d === void 0 ? void 0 : _d.self.permissions.polls.canView) &&\n      !((_e = this.meeting) === null || _e === void 0 ? void 0 : _e.self.permissions.polls.canVote))\n      return;\n    return (h(Host, { title: text }, this.unreadPollsCount !== 0 && !this.pollsActive && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, this.unreadPollsCount <= 100 ? this.unreadPollsCount : '99+'))), h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, t: this.t, class: { active: this.pollsActive }, onClick: () => this.togglePollsTab(), icon: this.iconPack.poll, label: text, variant: this.variant })));\n  }\n  static get watchers() { return {\n    \"meeting\": [\"meetingChanged\"],\n    \"states\": [\"statesChanged\"]\n  }; }\n};\nDytePollsToggle.style = dytePollsToggleCss;\n\nexport { DytePollsToggle as dyte_polls_toggle };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DytePollsToggle","hostRef","_this","_classCallCheck","registerInstance","this","stateUpdate","createEvent","onPollsUpdate","_ref","newPoll","unreadPollsCount","variant","meeting","undefined","states","size","iconPack","defaultIconPack","t","useLanguage","pollsActive","_createClass","key","value","_this2","meetingChanged","statesChanged","onChange","_a","polls","removeListener","items","length","addListener","s","state","activeSidebar","sidebar","emit","activeMoreMenu","_b","_c","_d","_e","_this3","text","self","config","controlBar","elements","permissions","canCreate","canView","canVote","h","Host","title","class","part","active","onClick","togglePollsTab","icon","poll","label","get","style","getLangData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","setTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","n","done","set","filter","err","e","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","includes","appendToMap","elms","stencilSubscription","createStore"],"sourceRoot":""}