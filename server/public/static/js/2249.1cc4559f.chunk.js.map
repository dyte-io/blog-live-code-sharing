{"version":3,"file":"static/js/2249.1cc4559f.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-simple-grid.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-60449c9e.js';\nimport { d as defaultConfig } from './default-ui-config-5c37753d.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { R as Render } from './index-0865d046.js';\nimport { i as index } from './ResizeObserver.es-02979d4e.js';\n\nfunction useGrid({ dimensions, count, aspectRatio, gap }) {\n  const { width, height, rows, cols } = useGridItemDimensions({\n    dimensions,\n    count,\n    aspectRatio,\n    gap,\n  });\n  const getPosition = useGridPositioning({\n    parentDimensions: dimensions,\n    dimensions: { width, height },\n    rows,\n    cols,\n    count,\n    gap,\n  });\n  return { width, height, getPosition };\n}\nfunction useGridItemDimensions({ count, dimensions, aspectRatio, gap, }) {\n  let { width: W, height: H } = dimensions;\n  if (W === 0 || H === 0)\n    return { width: 0, height: 0, rows: 1, cols: 1 };\n  W -= gap * 2;\n  H -= gap * 2;\n  const s = gap, N = count;\n  const r = getAspectRatio(aspectRatio);\n  let w = 0, h = 0;\n  let a = 1, b = 1;\n  const widths = [];\n  for (let n = 1; n <= N; n++) {\n    widths.push((W - s * (n - 1)) / n);\n    widths.push((H - s * (n - 1)) / (n * r));\n  }\n  // sort in descending order, largest first\n  widths.sort((a, b) => b - a);\n  for (const width of widths) {\n    w = width;\n    h = w * r;\n    a = Math.floor((W + s) / (w + s));\n    b = Math.floor((H + s) / (h + s));\n    if (a * b >= N) {\n      // recalculate rows, as row calculated above can be inaccurate\n      b = Math.ceil(N / a);\n      break;\n    }\n  }\n  return { width: w, height: h, rows: b, cols: a };\n}\nfunction useGridPositioning({ parentDimensions, dimensions, rows, cols, count, gap, }) {\n  const { width: W, height: H } = parentDimensions;\n  const { width: w, height: h } = dimensions;\n  const firstTop = (H - (h * rows + (rows - 1) * gap)) / 2;\n  let firstLeft = (W - (w * cols + (cols - 1) * gap)) / 2;\n  const topAdd = h + gap;\n  const leftAdd = w + gap;\n  let col = 0, row = 0;\n  const incompleteRowCols = count % cols;\n  function getPosition(index) {\n    const remaining = count - index;\n    if (remaining === incompleteRowCols) {\n      // in last row with incomplete columns, recalculate firstLeft to make it centered\n      firstLeft = (W - (w * remaining + (remaining - 1) * gap)) / 2;\n    }\n    const top = firstTop + row * topAdd;\n    const left = firstLeft + col * leftAdd;\n    col++;\n    if ((index + 1) % cols === 0) {\n      // if a row has been traversed completely, increment row, reset col\n      row++;\n      col = 0;\n    }\n    return { top, left };\n  }\n  return getPosition;\n}\n/**\n * Parses the Aspect Ratio value\n * @param ratio The aspect ratio in the format of `16:9` where `width:height`\n * @returns The parsed value of aspect ratio\n */\nconst getAspectRatio = (ratio) => {\n  const [width, height] = ratio.split(':');\n  return Number.parseInt(height) / Number.parseInt(width);\n};\n\nconst dyteSimpleGridCss = \":host{position:relative;display:block;height:100%;width:100%}\";\n\nconst DyteSimpleGrid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.setHostDimensions = () => {\n      const { clientWidth: width, clientHeight: height } = this.host;\n      this.dimensions = { width, height };\n    };\n    this.participants = [];\n    this.aspectRatio = '16:9';\n    this.gap = 8;\n    this.size = undefined;\n    this.meeting = undefined;\n    this.states = undefined;\n    this.config = defaultConfig;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.dimensions = { width: 0, height: 0 };\n  }\n  connectedCallback() {\n    this.resizeObserver = new index(this.setHostDimensions);\n    this.resizeObserver.observe(this.host);\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n  render() {\n    const defaults = {\n      meeting: this.meeting,\n      config: this.config,\n      states: this.states,\n      size: this.size,\n      iconPack: this.iconPack,\n      t: this.t,\n    };\n    const { width, height, getPosition } = useGrid({\n      dimensions: this.dimensions,\n      count: this.participants.length,\n      aspectRatio: this.aspectRatio,\n      gap: this.gap,\n    });\n    return (h(Host, null, this.participants.map((participant, index) => {\n      const { top, left } = getPosition(index);\n      return (h(Render, { element: \"dyte-participant-tile\", defaults: defaults, props: {\n          participant,\n          style: {\n            position: 'absolute',\n            top: `${top}px`,\n            left: `${left}px`,\n            width: `${width}px`,\n            height: `${height}px`,\n          },\n          key: participant.id,\n          'data-participant': participant.id,\n        }, childProps: { participant }, deepProps: true }));\n    }), h(\"slot\", null)));\n  }\n  get host() { return getElement(this); }\n};\nDyteSimpleGrid.style = dyteSimpleGridCss;\n\nexport { DyteSimpleGrid as dyte_simple_grid };\n"],"names":["useGrid","_ref","dimensions","count","aspectRatio","gap","_useGridItemDimension","_ref2","W","width","H","height","rows","cols","s","N","r","getAspectRatio","w","h","a","b","widths","n","push","sort","_i","_widths","length","Math","floor","ceil","useGridItemDimensions","getPosition","_ref3","parentDimensions","firstTop","firstLeft","topAdd","leftAdd","col","row","incompleteRowCols","index","remaining","top","left","useGridPositioning","ratio","_ratio$split","split","_ratio$split2","_slicedToArray","Number","parseInt","DyteSimpleGrid","hostRef","_this","_classCallCheck","registerInstance","this","setHostDimensions","_this$host","host","clientWidth","clientHeight","participants","size","undefined","meeting","states","config","defaultConfig","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","resizeObserver","observe","_a","disconnect","defaults","_useGrid","Host","map","participant","_getPosition","Render","element","props","style","position","concat","id","childProps","deepProps","get","getElement"],"sourceRoot":""}