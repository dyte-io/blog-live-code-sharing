{"version":3,"file":"static/js/9281.937a0000.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-breakout-rooms-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { s as state } from './store-183b9cab.js';\n\nconst dyteBreakoutRoomsToggleCss = \":host{display:block;font-family:var(--dyte-font-family, sans-serif)}\";\n\nconst DyteBreakoutRoomsToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.breakoutRoomToggle = () => {\n      var _a, _b, _c, _d, _e;\n      const activeConnectedMeetings = (_a = this.meeting.connectedMeetings.list.filter((meeting) => meeting.status === 'ACTIVE')) === null || _a === void 0 ? void 0 : _a.length;\n      if (this.states.activeBreakoutRooms || activeConnectedMeetings > 0) {\n        this.stateUpdate.emit({ activeBreakoutRoomGrid: !((_b = this.states) === null || _b === void 0 ? void 0 : _b.activeBreakoutRoomGrid) });\n        state.activeBreakoutRoomGrid = !state.activeBreakoutRoomGrid;\n      }\n      else {\n        this.stateUpdate.emit({\n          activeBreakoutRoomsManager: {\n            active: !((_d = (_c = this.states) === null || _c === void 0 ? void 0 : _c.activeBreakoutRoomsManager) === null || _d === void 0 ? void 0 : _d.active),\n            mode: 'create',\n          },\n        });\n        state.activeBreakoutRoomsManager = {\n          active: !((_e = state.activeBreakoutRoomsManager) === null || _e === void 0 ? void 0 : _e.active),\n          mode: 'create',\n        };\n      }\n    };\n    this.variant = 'button';\n    this.meeting = undefined;\n    this.states = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n  }\n  render() {\n    var _a;\n    const permissions = (_a = this.meeting.self.permissions) === null || _a === void 0 ? void 0 : _a.connectedMeetings;\n    if (!(permissions === null || permissions === void 0 ? void 0 : permissions.canAlterConnectedMeetings) && !this.states.activeBreakoutRooms)\n      return;\n    return (h(Host, { title: this.t('Breakout Rooms') }, h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, t: this.t, onClick: this.breakoutRoomToggle, class: { active: this.states.activeBreakoutRooms && this.states.activeBreakoutRoomGrid }, icon: this.iconPack.breakout_rooms, label: this.t('Breakout Rooms'), variant: this.variant })));\n  }\n};\nDyteBreakoutRoomsToggle.style = dyteBreakoutRoomsToggleCss;\n\nexport { DyteBreakoutRoomsToggle as dyte_breakout_rooms_toggle };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DyteBreakoutRoomsToggle","hostRef","_this","_classCallCheck","registerInstance","this","stateUpdate","createEvent","breakoutRoomToggle","_a","_b","_c","_d","_e","activeConnectedMeetings","meeting","connectedMeetings","list","filter","status","length","states","activeBreakoutRooms","emit","activeBreakoutRoomGrid","state","activeBreakoutRoomsManager","active","mode","variant","undefined","size","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","permissions","self","canAlterConnectedMeetings","h","Host","title","part","onClick","class","icon","breakout_rooms","label","style","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","setTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","s","n","done","set","get","err","e","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","onChange","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elements","elms","stencilSubscription","createStore"],"sourceRoot":""}