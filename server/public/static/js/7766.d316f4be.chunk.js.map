{"version":3,"file":"static/js/7766.d316f4be.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-client-faf935bd.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-notifications.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/string-8aa800b0.js"],"sourcesContent":["var RemoteUpdateType;\n(function (RemoteUpdateType) {\n  RemoteUpdateType[\"REQUEST_RECEIVED\"] = \"REQUEST_RECEIVED\";\n  RemoteUpdateType[\"REQUEST_SENT\"] = \"REQUEST_SENT\";\n  RemoteUpdateType[\"INCOMING_REQUEST_ACCEPTED\"] = \"INCOMING_REQUEST_ACCEPTED\";\n  RemoteUpdateType[\"OUTGOING_REQUEST_ACCEPTED\"] = \"OUTGOING_REQUEST_ACCEPTED\";\n  RemoteUpdateType[\"INCOMING_REQUEST_ENDED\"] = \"INCOMING_REQUEST_ENDED\";\n  RemoteUpdateType[\"OUTGOING_REQUEST_ENDED\"] = \"OUTGOING_REQUEST_ENDED\";\n})(RemoteUpdateType || (RemoteUpdateType = {}));\n\nexport { RemoteUpdateType as R };\n","import { r as registerInstance, w as writeTask, h, H as Host, g as getElement } from './index-60449c9e.js';\nimport { R as RemoteUpdateType } from './dyte-client-faf935bd.js';\nimport { D as DyteNotificationsAudio } from './notification-8c0067e0.js';\nimport { f as formatName, s as shorten } from './string-8aa800b0.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { d as defaultConfig } from './default-ui-config-5c37753d.js';\nimport { p as parseMessageForTarget } from './chat-0611caa4.js';\nimport './logger-8eaa31ac.js';\nimport './user-prefs-f52d234f.js';\nimport './graceful-storage-33bc316d.js';\n\nconst DEFAULT_NOTIFICATION_DURATION = 2000;\nconst DEFAULT_NOTIFICATION_CONFIG = Object.freeze({\n  notifications: {\n    participant_joined: true,\n    participant_left: true,\n    participant_joined_waitlist: true,\n    chat: true,\n    polls: true,\n    webinar: true,\n    tab_sync: true,\n  },\n  notification_sounds: {\n    participant_joined: true,\n    participant_left: true,\n    chat: true,\n    polls: true,\n    webinar: true,\n  },\n  notification_duration: {\n    participant_joined: 2100,\n    participant_left: 2100,\n    participant_joined_waitlist: 4000,\n    chat: DEFAULT_NOTIFICATION_DURATION,\n    polls: DEFAULT_NOTIFICATION_DURATION,\n    webinar: DEFAULT_NOTIFICATION_DURATION,\n    tab_sync: DEFAULT_NOTIFICATION_DURATION,\n  },\n  participant_joined_sound_notification_limit: 10,\n  participant_chat_message_sound_notification_limit: 10,\n});\n\nconst dyteNotificationsCss = \":host{position:absolute;top:var(--dyte-space-4, 16px);right:var(--dyte-space-4, 16px);bottom:var(--dyte-space-4, 16px);left:var(--dyte-space-4, 16px);top:auto;display:flex;flex-direction:column;font-family:var(--dyte-font-family, sans-serif);pointer-events:none;z-index:100}dyte-notification{margin-top:var(--dyte-space-2, 8px)}\";\n\nfunction parseConfig(config) {\n  const permissions = Object.assign({}, DEFAULT_NOTIFICATION_CONFIG);\n  if (config == null)\n    return permissions;\n  Object.assign(permissions.notification_sounds, config.notification_sounds);\n  Object.assign(permissions.notifications, config.notifications);\n  Object.assign(permissions.notification_duration, config.notification_duration);\n  permissions.participant_chat_message_sound_notification_limit =\n    config.participant_chat_message_sound_notification_limit;\n  permissions.participant_joined_sound_notification_limit =\n    config.participant_joined_sound_notification_limit;\n  return permissions;\n}\nfunction getEnabledSounds(sounds) {\n  return Object.keys(sounds).filter((key) => sounds[key]);\n}\nconst DyteNotifications = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.permissions = DEFAULT_NOTIFICATION_CONFIG;\n    this.enabledSounds = getEnabledSounds(DEFAULT_NOTIFICATION_CONFIG.notification_sounds);\n    this.onRemoteUpdate = ({ payload, type }) => {\n      if (type === RemoteUpdateType.INCOMING_REQUEST_ACCEPTED) {\n        let remotePeer = this.meeting.participants.joined.get(payload.request.remotePeerId);\n        this.add({\n          id: `message-${Math.random().toString(36)}`,\n          icon: this.iconPack.chat,\n          message: `Granted remote control to ${remotePeer.name}`,\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n      if (type === RemoteUpdateType.OUTGOING_REQUEST_ACCEPTED) {\n        let hostPeer = this.meeting.participants.joined.get(payload.request.hostPeerId);\n        this.add({\n          id: `message-${Math.random().toString(36)}`,\n          icon: this.iconPack.chat,\n          message: `${hostPeer.name} has granted remote control.`,\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n      if (type === RemoteUpdateType.REQUEST_RECEIVED) {\n        let remotePeer = this.meeting.participants.joined.get(payload.request.remotePeerId);\n        this.add({\n          id: `message-${Math.random().toString(36)}`,\n          icon: this.iconPack.chat,\n          message: `${remotePeer.name} has requested for remote control.`,\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n      if (type === RemoteUpdateType.INCOMING_REQUEST_ENDED ||\n        type === RemoteUpdateType.OUTGOING_REQUEST_ENDED) {\n        this.add({\n          id: `message-${Math.random().toString(36)}`,\n          icon: this.iconPack.chat,\n          message: `Existing remote control has been terminated.`,\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n      if (type === RemoteUpdateType.REQUEST_SENT) {\n        let hostPeer = this.meeting.participants.joined.get(payload.request.hostPeerId);\n        this.add({\n          id: `message-${Math.random().toString(36)}`,\n          icon: this.iconPack.chat,\n          message: `Sent remote control request to ${hostPeer.name}`,\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n    };\n    this.onDyteNotification = (e) => {\n      this.add(e.detail);\n      const playSound = e.detail.playSound;\n      if (playSound != undefined)\n        this.audio.play(playSound);\n    };\n    this.onRecordingUpdate = (recordingState) => {\n      if (recordingState === 'RECORDING') {\n        this.add({\n          id: 'recording-started',\n          icon: this.iconPack.recording,\n          message: this.t('recording.started'),\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n      else if (recordingState === 'STOPPING') {\n        this.add({\n          id: 'recording-stopped',\n          icon: this.iconPack.stop_recording,\n          message: this.t('recording.stopped'),\n          duration: DEFAULT_NOTIFICATION_DURATION,\n        });\n      }\n    };\n    this.meeting = undefined;\n    this.states = undefined;\n    this.config = defaultConfig;\n    this.t = useLanguage();\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.notifications = [];\n  }\n  connectedCallback() {\n    if (typeof document !== 'undefined') {\n      document === null || document === void 0 ? void 0 : document.addEventListener('dyteNotification', this.onDyteNotification);\n    }\n    this.meetingChanged(this.meeting);\n    this.configChanged(this.config);\n    this.statesChanged(this.states);\n  }\n  clearListeners(meeting) {\n    var _a, _b, _c, _d;\n    this.participantJoinedListener &&\n      meeting.participants.joined.removeListener('participantJoined', this.participantJoinedListener);\n    this.participantLeftListener &&\n      meeting.participants.joined.removeListener('participantLeft', this.participantLeftListener);\n    this.chatUpdateListener && ((_a = meeting.chat) === null || _a === void 0 ? void 0 : _a.removeListener('chatUpdate', this.chatUpdateListener));\n    this.pollUpdateListener &&\n      ((_b = meeting.polls) === null || _b === void 0 ? void 0 : _b.removeListener('pollsUpdate', this.pollUpdateListener));\n    this.meetingDisconnectedListener &&\n      meeting.meta.removeListener('disconnected', this.meetingDisconnectedListener);\n    this.meetingConnectedListener &&\n      meeting.meta.removeListener('connected', this.meetingConnectedListener);\n    this.socketDisconnectedListener &&\n      meeting.meta.removeListener('socketDisconnected', this.socketDisconnectedListener);\n    this.socketReconnectFailureListener &&\n      meeting.meta.removeListener('socketReconnectFailure', this.socketReconnectFailureListener);\n    this.socketReconnectedListener &&\n      meeting.meta.removeListener('socketReconnected', this.socketReconnectedListener);\n    this.socketReconnectingListener &&\n      meeting.meta.removeListener('socketReconnecting', this.socketReconnectingListener);\n    this.socketFailureListener &&\n      meeting.meta.removeListener('socketFailure', this.socketFailureListener);\n    (_c = meeting.remote) === null || _c === void 0 ? void 0 : _c.removeListener('remoteUpdate', this.onRemoteUpdate);\n    (_d = meeting.recording) === null || _d === void 0 ? void 0 : _d.removeListener('recordingUpdate', this.onRecordingUpdate);\n    clearTimeout(this.disconnectTimeout);\n  }\n  disconnectedCallback() {\n    var _a, _b, _c, _d;\n    if (typeof document !== 'undefined') {\n      document === null || document === void 0 ? void 0 : document.removeEventListener('dyteNotification', this.onDyteNotification);\n    }\n    if (this.meeting == null)\n      return;\n    this.clearListeners(this.meeting);\n    this.participantJoinedListener &&\n      this.meeting.participants.joined.removeListener('participantJoined', this.participantJoinedListener);\n    this.participantLeftListener &&\n      this.meeting.participants.joined.removeListener('participantLeft', this.participantLeftListener);\n    this.waitlistedParticipantJoinedListener &&\n      this.meeting.participants.waitlisted.removeListener('participantJoined', this.waitlistedParticipantJoinedListener);\n    this.chatUpdateListener &&\n      ((_a = this.meeting.chat) === null || _a === void 0 ? void 0 : _a.removeListener('chatUpdate', this.chatUpdateListener));\n    this.pollUpdateListener &&\n      ((_b = this.meeting.polls) === null || _b === void 0 ? void 0 : _b.removeListener('pollsUpdate', this.pollUpdateListener));\n    this.networkUpdateListener &&\n      this.meeting.meta.removeListener('disconnected', this.networkUpdateListener);\n    this.networkUpdateListener &&\n      this.meeting.meta.removeListener('connected', this.networkUpdateListener);\n    (_c = this.meeting.remote) === null || _c === void 0 ? void 0 : _c.removeListener('remoteUpdate', this.onRemoteUpdate);\n    this.spotlightTabUpdateListener &&\n      ((_d = this.meeting.spotlight) === null || _d === void 0 ? void 0 : _d.removeListener('activeTabUpdate', this.spotlightTabUpdateListener));\n    this.peerRequestToJoinStateListener &&\n      this.meeting.participants.joined.removeListener('peerRequestToJoinStage', this.peerRequestToJoinStateListener);\n    this.peerAcceptedToJoinStageListener &&\n      this.meeting.participants.joined.removeListener('peerAcceptedToJoinStage', this.peerAcceptedToJoinStageListener);\n    this.peerRejectedToJoinStageListener &&\n      this.meeting.participants.joined.removeListener('peerRejectedToJoinStage', this.peerRejectedToJoinStageListener);\n  }\n  meetingChanged(meeting, oldMeeting) {\n    var _a, _b, _c, _d, _e;\n    clearTimeout(this.disconnectTimeout);\n    if (oldMeeting !== undefined)\n      this.clearListeners(oldMeeting);\n    if (meeting != null) {\n      this.audio = new DyteNotificationsAudio();\n      const { notifications, notification_duration, notification_sounds } = this.permissions;\n      this.participantJoinedListener = (participant) => {\n        if (notifications.participant_joined) {\n          this.add({\n            id: `${participant.id}-joined`,\n            message: `${formatName(participant.name)} just joined`,\n            image: participant.picture,\n            duration: notification_duration.participant_joined,\n          });\n        }\n        if (notification_sounds.participant_joined && this.canPlayParticipantJoinedSound()) {\n          this.audio.play('joined');\n        }\n      };\n      this.participantLeftListener = (participant) => {\n        if (notifications.participant_left) {\n          this.add({\n            id: `${participant.id}-left`,\n            message: `${formatName(participant.name)} left`,\n            image: participant.picture,\n            duration: notification_duration.participant_left,\n          });\n        }\n        if (notification_sounds.participant_left && this.canPlayParticipantJoinedSound()) {\n          this.audio.play('left');\n        }\n      };\n      this.waitlistedParticipantJoinedListener = (participant) => {\n        const id = `${participant.id}-joined-waitlist`;\n        this.add({\n          id,\n          message: `${formatName(participant.name)} is requesting to join the meeting`,\n          image: participant.picture,\n          duration: notification_duration.participant_joined_waitlist,\n          button: {\n            text: 'Accept',\n            variant: 'secondary',\n            onClick: async () => {\n              await this.meeting.participants.acceptWaitingRoomRequest(participant.id);\n              this.remove(id);\n            },\n          },\n        });\n      };\n      this.chatUpdateListener = ({ message }) => {\n        const parsedMessage = parseMessageForTarget(message);\n        if (parsedMessage != null) {\n          if (parsedMessage.userId === meeting.self.userId) {\n            return;\n          }\n          if (parsedMessage.type === 'text') {\n            if (notifications.chat) {\n              this.add({\n                id: `message-${Math.random().toString(36)}`,\n                icon: this.iconPack.chat,\n                message: `${parsedMessage.displayName}: ${shorten(parsedMessage.message, 20)}`,\n                duration: notification_duration.chat,\n              });\n            }\n            if (notification_sounds.chat && this.canPlayChatSound()) {\n              this.audio.play('message');\n            }\n          }\n        }\n      };\n      this.pollUpdateListener = ({ polls, newPoll }) => {\n        if (newPoll === false)\n          return;\n        if (notifications.polls &&\n          this.meeting.self.userId !== polls[polls.length - 1].createdByUserId) {\n          this.add({\n            id: `poll-${Math.random().toString(36)}`,\n            icon: this.iconPack.poll,\n            message: `New poll created by ${polls[polls.length - 1].createdBy}`,\n            duration: notification_duration.polls,\n          });\n        }\n        if (notification_sounds.polls &&\n          this.meeting.self.userId !== polls[polls.length - 1].createdByUserId &&\n          this.canPlayChatSound()) {\n          this.audio.play('message');\n        }\n      };\n      this.deviceUpdateListener = ({ device, preview }) => {\n        if (preview)\n          return;\n        if (device.kind === 'audiooutput') {\n          this.audio.setDevice(device.deviceId);\n          this.add({\n            id: `speaker-switched-${device.deviceId}`,\n            message: `Connected to ${device.label}`,\n            icon: this.iconPack.speaker,\n            duration: 5000,\n          });\n        }\n        else if (device.kind === 'videoinput') {\n          this.add({\n            id: `camera-switched-${device.deviceId}`,\n            message: `Connected to ${device.label}`,\n            icon: this.iconPack.speaker,\n            duration: 5000,\n          });\n        }\n        else {\n          this.add({\n            id: `mic-switched-${device.deviceId}`,\n            message: `Connected to ${device.label}`,\n            icon: this.iconPack.mic_on,\n            duration: 5000,\n          });\n        }\n      };\n      this.networkUpdateListener = ({ event }) => {\n        this.remove('network');\n        let reconnectDuration;\n        if (event === 'disconnected') {\n          reconnectDuration = 20000;\n          this.add({\n            id: 'network',\n            icon: this.iconPack.disconnected,\n            message: this.t('Connection lost. Trying to reconnect...'),\n            duration: reconnectDuration,\n          });\n          this.disconnectTimeout = setTimeout(() => {\n            this.add({\n              id: 'network-lost',\n              icon: this.iconPack.disconnected,\n              message: this.t('Taking too long to reconnect...'),\n              button: {\n                text: this.t('End Meeting'),\n                variant: 'danger',\n                onClick: () => { var _a; return (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.leaveRoom(); },\n              },\n            });\n          }, reconnectDuration);\n        }\n        else if (event === 'connected') {\n          this.remove('network-lost');\n          reconnectDuration = 3000;\n          this.add({\n            id: `network`,\n            icon: this.iconPack.wifi,\n            message: this.t('Connection restored'),\n            duration: reconnectDuration,\n          });\n          clearTimeout(this.disconnectTimeout);\n        }\n      };\n      this.socketUpdateListener = ({ event, attempt }) => {\n        this.remove('socket');\n        if (event === 'reconnected') {\n          this.remove('socketReconnecting');\n          this.add({\n            id: `socket`,\n            icon: this.iconPack.wifi,\n            message: this.t('Connection restored'),\n            duration: 3000,\n          });\n        }\n        else if (event === 'disconnected') {\n          this.add({\n            id: 'socket',\n            icon: this.iconPack.disconnected,\n            message: this.t('Connection lost'),\n            duration: 3000,\n          });\n        }\n        else if (event === 'reconnecting') {\n          this.add({\n            id: 'socketReconnecting',\n            icon: this.iconPack.disconnected,\n            message: this.t('Connection lost. Please check your network connection.'),\n          });\n        }\n        else if (event === 'reconnectFailure') {\n          if (attempt > 5) {\n            this.remove('socketReconnecting');\n            this.add({\n              id: 'socketReconnecting',\n              icon: this.iconPack.disconnected,\n              message: this.t('Taking too long to reconnect. Please check your network connection.'),\n              button: {\n                text: this.t('End Meeting'),\n                variant: 'danger',\n                onClick: () => { var _a; return (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.leaveRoom(); },\n              },\n            });\n          }\n        }\n        else if (event === 'failed') {\n          this.remove('socketReconnecting');\n          this.add({\n            id: 'socketFailed',\n            icon: this.iconPack.disconnected,\n            message: this.t('Could not reconnect. Please leave the meeting and try refreshing the window.'),\n          });\n          this.add({\n            id: 'leaveMeeting',\n            icon: this.iconPack.warning,\n            message: this.t(`Automatically leaving the meeting in 10 seconds.`),\n          });\n          setTimeout(() => {\n            var _a;\n            (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.leaveRoom('disconnected');\n          }, 10000);\n        }\n      };\n      this.spotlightTabUpdateListener = (spotlightTab) => {\n        if (!notifications.tab_sync)\n          return;\n        switch (spotlightTab.type) {\n          case 'plugin':\n            const spotlightPlugin = meeting.plugins.active\n              .toArray()\n              .find((plugin) => plugin.id == spotlightTab.id);\n            if (spotlightPlugin != undefined) {\n              this.add({\n                id: 'spotlight',\n                message: `Plugin switched to ${spotlightPlugin.name}`,\n                duration: notification_duration.participant_joined,\n              });\n            }\n            break;\n          case 'screenshare':\n            const screenShareParticipant = meeting.participants.joined\n              .toArray()\n              .filter((participant) => participant.screenShareEnabled)\n              .find((participant) => participant.id == spotlightTab.id);\n            if (screenShareParticipant != undefined) {\n              this.add({\n                id: 'spotlight',\n                message: `Now watching ${screenShareParticipant.name}'s screen`,\n                duration: notification_duration.webinar,\n              });\n            }\n            break;\n        }\n      };\n      this.peerRequestToJoinStateListener = ({ id }) => {\n        if (!notifications.webinar)\n          return;\n        const participant = this.meeting.participants.joined.get(id);\n        if (participant !== undefined) {\n          this.add({\n            id: `webinar-request-${id}`,\n            message: `${participant.name} is requesting to be on stage`,\n            duration: notification_duration.webinar,\n            button: {\n              text: 'Accept',\n              variant: 'primary',\n              onClick: async () => {\n                await this.meeting.participants.acceptAllRequestToJoinStageRequests([\n                  {\n                    id,\n                    requestToJoinType: 'REQUEST_TO_PRESENT',\n                  },\n                ]);\n                this.remove(`webinar-request-${id}`);\n              },\n            },\n          });\n          if (notification_sounds.webinar) {\n            this.audio.play('joined');\n          }\n        }\n      };\n      this.peerAcceptedToJoinStageListener = (request) => {\n        if (!notifications.webinar)\n          return;\n        const participant = this.meeting.participants.joined.get(request.id);\n        if (participant !== undefined) {\n          this.add({\n            id: `webinar-accepted-${request.id}`,\n            message: `Approved ${participant.name}'s request to join stage.`,\n            duration: notification_duration.webinar,\n          });\n          if (notification_sounds.webinar) {\n            this.audio.play('joined');\n          }\n        }\n      };\n      this.peerRejectedToJoinStageListener = (request) => {\n        if (!notifications.webinar)\n          return;\n        const participant = this.meeting.participants.joined.get(request.id);\n        if (participant !== undefined) {\n          this.add({\n            id: `webinar-rejected-${request.id}`,\n            message: `Rejected ${participant.name}'s request to join stage.`,\n            duration: notification_duration.webinar,\n          });\n        }\n      };\n      this.meetingDisconnectedListener = () => this.networkUpdateListener({ event: 'disconnected' });\n      this.meetingConnectedListener = () => this.networkUpdateListener({ event: 'connected' });\n      this.socketReconnectedListener = () => this.socketUpdateListener({ event: 'reconnected' });\n      this.socketDisconnectedListener = () => this.socketUpdateListener({ event: 'disconnected' });\n      this.socketReconnectingListener = () => this.socketUpdateListener({ event: 'reconnecting' });\n      this.socketFailureListener = () => this.socketUpdateListener({ event: 'failed' });\n      this.socketReconnectFailureListener = ({ attempt }) => this.socketUpdateListener({\n        event: 'reconnectFailure',\n        attempt,\n      });\n      const currentDevices = meeting.self.getCurrentDevices();\n      if (currentDevices.speaker != null) {\n        this.audio.setDevice(currentDevices.speaker.deviceId);\n      }\n      meeting.participants.joined.addListener('participantJoined', this.participantJoinedListener);\n      meeting.participants.joined.addListener('participantLeft', this.participantLeftListener);\n      meeting.participants.joined.addListener('peerRequestToJoinStage', this.peerRequestToJoinStateListener);\n      meeting.participants.joined.addListener('peerAcceptedToJoinStage', this.peerAcceptedToJoinStageListener);\n      meeting.participants.joined.addListener('peerRejectedToJoinStage', this.peerRejectedToJoinStageListener);\n      if (this.canAcceptWaitingRequests()) {\n        meeting.participants.waitlisted.addListener('participantJoined', this.waitlistedParticipantJoinedListener);\n      }\n      (_a = meeting.chat) === null || _a === void 0 ? void 0 : _a.addListener('chatUpdate', this.chatUpdateListener);\n      (_b = meeting.polls) === null || _b === void 0 ? void 0 : _b.addListener('pollsUpdate', this.pollUpdateListener);\n      meeting.self.addListener('deviceUpdate', this.deviceUpdateListener);\n      meeting.meta.addListener('disconnected', this.meetingDisconnectedListener);\n      meeting.meta.addListener('connected', this.meetingConnectedListener);\n      meeting.meta.addListener('socketReconnected', this.socketReconnectedListener);\n      meeting.meta.addListener('socketDisconnected', this.socketDisconnectedListener);\n      meeting.meta.addListener('socketReconnecting', this.socketReconnectingListener);\n      meeting.meta.addListener('socketFailure', this.socketFailureListener);\n      meeting.meta.addListener('socketReconnectFailure', this.socketReconnectFailureListener);\n      (_c = meeting.remote) === null || _c === void 0 ? void 0 : _c.addListener('remoteUpdate', this.onRemoteUpdate);\n      (_d = meeting.spotlight) === null || _d === void 0 ? void 0 : _d.addListener('activeTabUpdate', this.spotlightTabUpdateListener);\n      (_e = meeting.recording) === null || _e === void 0 ? void 0 : _e.addListener('recordingUpdate', this.onRecordingUpdate);\n    }\n  }\n  configChanged(config) {\n    if (config != null) {\n      if ((config === null || config === void 0 ? void 0 : config.config) != null) {\n        this.permissions = parseConfig(config.config);\n        this.enabledSounds = getEnabledSounds(this.permissions.notification_sounds);\n      }\n    }\n  }\n  statesChanged(states) {\n    var _a;\n    if (states != null) {\n      const notificationSoundsEnabled = !((_a = states === null || states === void 0 ? void 0 : states.prefs) === null || _a === void 0 ? void 0 : _a.muteNotificationSounds);\n      // toggle only the notification sounds values which were enabled in the first place\n      for (const permission of this.enabledSounds) {\n        if (permission in this.permissions.notification_sounds) {\n          this.permissions.notification_sounds[permission] = notificationSoundsEnabled;\n        }\n      }\n    }\n  }\n  add(notification) {\n    // show notifications only if tab is in focus and a maximum of 5 at a time\n    if (document.visibilityState === 'visible' && this.notifications.length < 5) {\n      // adds new notification to start of array so they appear at the bottom\n      this.notifications = [...this.notifications, notification];\n    }\n  }\n  remove(id) {\n    this.notifications = this.notifications.filter((notification) => notification.id !== id);\n  }\n  handleDismiss(e) {\n    e.stopPropagation();\n    const id = e.detail;\n    const el = this.host.shadowRoot.querySelector(`[data-id=\"${id}\"]`);\n    // exit animation\n    el === null || el === void 0 ? void 0 : el.classList.add('exit');\n    setTimeout(() => {\n      writeTask(() => {\n        this.remove(id);\n      });\n    }, 400);\n  }\n  canPlayParticipantJoinedSound() {\n    return (this.permissions.participant_chat_message_sound_notification_limit == undefined ||\n      this.permissions.participant_chat_message_sound_notification_limit <= 0 ||\n      this.meeting.participants.count <=\n        this.permissions.participant_chat_message_sound_notification_limit);\n  }\n  canPlayChatSound() {\n    return (this.permissions.participant_chat_message_sound_notification_limit == undefined ||\n      this.permissions.participant_chat_message_sound_notification_limit <= 0 ||\n      this.meeting.participants.count <=\n        this.permissions.participant_chat_message_sound_notification_limit);\n  }\n  canAcceptWaitingRequests() {\n    return (this.permissions.notifications.participant_joined_waitlist &&\n      this.meeting.self.permissions.acceptWaitingRequests);\n  }\n  render() {\n    return (h(Host, null, this.notifications.map((notification) => (h(\"dyte-notification\", { size: this.size, key: notification.id, \"data-id\": notification.id, notification: notification, onDyteNotificationDismiss: (e) => this.handleDismiss(e), iconPack: this.iconPack, t: this.t })))));\n  }\n  get host() { return getElement(this); }\n  static get watchers() { return {\n    \"meeting\": [\"meetingChanged\"],\n    \"config\": [\"configChanged\"],\n    \"states\": [\"statesChanged\"]\n  }; }\n};\nDyteNotifications.style = dyteNotificationsCss;\n\nexport { DyteNotifications as dyte_notifications };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","/**\n * Shorten a string upto a maximum length of characters and add `...` as suffix if it exceeds the maximum length\n * @param str The The string you want to shorten\n * @param maxLength Maximum length of character\n * @returns Formatted shortedned string\n */\nconst shorten = (str, maxLength = 20) => {\n  if (str == null)\n    return '';\n  if (str.length > maxLength) {\n    return `${str.substring(0, maxLength)}...`;\n  }\n  return str;\n};\n/**\n * Checks if a given string consists of only emojis.\n *\n * However this classifies a string with numbers as emoji as well.\n * Which works in our favour for now in chat as it enlarges messages with just numbers.\n * @param str String on which to perform the check on\n * @returns A Boolean value which indicates if string consists of only emojis\n */\nconst hasOnlyEmojis = (str) => {\n  const num = /^\\d+$/;\n  const re = /^\\p{Emoji}+$/u;\n  return re.test(str) && !num.test(str);\n};\nconst sanitizeLink = (link) => {\n  // TODO: needs more work\n  if (link === null || link === void 0 ? void 0 : link.trim().toLowerCase().startsWith('javascript:')) {\n    return 'https://dyte.io';\n  }\n  return link;\n};\n/**\n * Formats a given name and returns **Participant** for unnamed participants.\n * @param name Name of participant\n * @returns Name to use in the UI\n */\nconst formatName = (name) => {\n  name = name === null || name === void 0 ? void 0 : name.trim();\n  if (name === '')\n    return 'Participant';\n  return name;\n};\nfunction getInitials(name, maxInitials = 2) {\n  // removes any character that is not a letter, number or whitespace\n  const cleanedName = name.replace(/[^\\u00BF-\\u1FFF\\u2C00-\\uD7FF\\w\\s]/g, '');\n  const words = cleanedName.trim().split(/\\s+/).slice(0, maxInitials);\n  return words\n    .map((word) => word.charAt(0))\n    .join('')\n    .toUpperCase();\n}\n\nexport { sanitizeLink as a, formatName as f, getInitials as g, hasOnlyEmojis as h, shorten as s };\n"],"names":["RemoteUpdateType","DEFAULT_NOTIFICATION_DURATION","DEFAULT_NOTIFICATION_CONFIG","Object","freeze","notifications","participant_joined","participant_left","participant_joined_waitlist","chat","polls","webinar","tab_sync","notification_sounds","notification_duration","participant_joined_sound_notification_limit","participant_chat_message_sound_notification_limit","getEnabledSounds","sounds","keys","filter","key","DyteNotifications","hostRef","_this","_classCallCheck","registerInstance","this","permissions","enabledSounds","onRemoteUpdate","_ref","payload","type","remotePeer","meeting","participants","joined","get","request","remotePeerId","add","id","concat","Math","random","toString","icon","iconPack","message","name","duration","hostPeer","hostPeerId","onDyteNotification","e","detail","playSound","undefined","audio","play","onRecordingUpdate","recordingState","recording","t","stop_recording","states","config","defaultConfig","useLanguage","size","defaultIconPack","_createClass","value","document","addEventListener","meetingChanged","configChanged","statesChanged","_a","_b","_c","_d","participantJoinedListener","removeListener","participantLeftListener","chatUpdateListener","pollUpdateListener","meetingDisconnectedListener","meta","meetingConnectedListener","socketDisconnectedListener","socketReconnectFailureListener","socketReconnectedListener","socketReconnectingListener","socketFailureListener","remote","clearTimeout","disconnectTimeout","removeEventListener","clearListeners","waitlistedParticipantJoinedListener","waitlisted","networkUpdateListener","spotlightTabUpdateListener","spotlight","peerRequestToJoinStateListener","peerAcceptedToJoinStageListener","peerRejectedToJoinStageListener","oldMeeting","_e","_this2","DyteNotificationsAudio","_this$permissions","participant","formatName","image","picture","canPlayParticipantJoinedSound","button","text","variant","onClick","_onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","acceptWaitingRoomRequest","remove","stop","apply","arguments","_ref2","parsedMessage","parseMessageForTarget","userId","self","displayName","shorten","canPlayChatSound","_ref3","newPoll","length","createdByUserId","poll","createdBy","deviceUpdateListener","_ref4","device","preview","kind","setDevice","deviceId","label","speaker","mic_on","_ref5","reconnectDuration","event","disconnected","setTimeout","leaveRoom","wifi","socketUpdateListener","_ref6","attempt","warning","spotlightTab","spotlightPlugin","plugins","active","toArray","find","plugin","screenShareParticipant","screenShareEnabled","_ref7","_onClick2","_callee2","_context2","acceptAllRequestToJoinStageRequests","requestToJoinType","_ref8","currentDevices","getCurrentDevices","addListener","canAcceptWaitingRequests","assign","parseConfig","_step","notificationSoundsEnabled","prefs","muteNotificationSounds","_iterator","_createForOfIteratorHelper","s","n","done","permission","err","f","notification","visibilityState","_toConsumableArray","_this3","stopPropagation","el","host","shadowRoot","querySelector","classList","writeTask","count","acceptWaitingRequests","_this4","h","Host","map","onDyteNotificationDismiss","handleDismiss","getElement","style","getLangData","lang","res","trim","abrupt","defaultLanguage","fetch","sent","ok","t0","t1","t2","json","t3","call","t4","_x","str","maxLength","substring","hasOnlyEmojis","test","sanitizeLink","link","toLowerCase","startsWith","getInitials","maxInitials","replace","split","slice","word","charAt","join","toUpperCase"],"sourceRoot":""}