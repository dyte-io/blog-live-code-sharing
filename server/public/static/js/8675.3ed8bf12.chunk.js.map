{"version":3,"file":"static/js/8675.3ed8bf12.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-chat-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { s as state, o as onChange } from './store-183b9cab.js';\n\nconst dyteChatToggleCss = \":host{position:relative;display:block;font-family:var(--dyte-font-family, sans-serif)}.unread-count{position:absolute;right:var(--dyte-space-3, 12px);box-sizing:border-box;padding:var(--dyte-space-0\\\\.5, 2px);-webkit-user-select:none;-moz-user-select:none;user-select:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px;display:flex;height:var(--dyte-space-5, 20px);min-width:var(--dyte-space-5, 20px);align-items:center;justify-content:center;border-radius:9999px;z-index:1}:host([variant='horizontal']){display:flex;flex-direction:row-reverse;align-items:center}:host([variant='horizontal']) .unread-count{right:var(--dyte-space-4, 16px);top:auto}\";\n\nconst DyteChatToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.onChatUpdate = ({ action, message }) => {\n      var _a;\n      if (this.chatActive)\n        return;\n      if (action === 'add' && message.userId !== ((_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self.userId)) {\n        this.unreadMessageCount += 1;\n      }\n    };\n    this.toggleChat = () => {\n      const states = this.states || state;\n      this.chatActive = !((states === null || states === void 0 ? void 0 : states.activeSidebar) && (states === null || states === void 0 ? void 0 : states.sidebar) === 'chat');\n      if (this.chatActive) {\n        this.unreadMessageCount = 0;\n      }\n      state.activeSidebar = this.chatActive;\n      state.activeMoreMenu = false;\n      state.sidebar = this.chatActive ? 'chat' : 'none';\n      this.stateUpdate.emit({\n        activeSidebar: this.chatActive,\n        sidebar: this.chatActive ? 'chat' : 'none',\n        activeMoreMenu: false,\n      });\n    };\n    this.unreadMessageCount = 0;\n    this.variant = 'button';\n    this.meeting = undefined;\n    this.states = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.chatActive = false;\n  }\n  connectedCallback() {\n    this.meetingChanged(this.meeting);\n    this.statesChanged(this.states);\n    onChange('sidebar', () => this.statesChanged());\n  }\n  disconnectedCallback() {\n    var _a, _b;\n    (_b = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.chat) === null || _b === void 0 ? void 0 : _b.removeListener('chatUpdate', this.onChatUpdate);\n  }\n  meetingChanged(meeting) {\n    var _a, _b;\n    if (meeting != null) {\n      this.unreadMessageCount = ((_a = meeting.chat) === null || _a === void 0 ? void 0 : _a.messages.length) || 0;\n      (_b = meeting.chat) === null || _b === void 0 ? void 0 : _b.addListener('chatUpdate', this.onChatUpdate);\n    }\n  }\n  statesChanged(s) {\n    const states = s || state;\n    if (states != null) {\n      this.chatActive = states.activeSidebar === true && states.sidebar === 'chat';\n    }\n  }\n  render() {\n    var _a;\n    if (this.meeting && !this.meeting.chat)\n      return;\n    const config = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self.config;\n    if (config && !config.controlBar.elements.chat)\n      return;\n    return (h(Host, { title: this.t('chat') }, this.unreadMessageCount !== 0 && !this.chatActive && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, this.unreadMessageCount <= 100 ? this.unreadMessageCount : '99+'))), h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, t: this.t, class: { active: this.chatActive }, onClick: this.toggleChat, icon: this.iconPack.chat, label: this.t('chat'), variant: this.variant })));\n  }\n  static get watchers() { return {\n    \"meeting\": [\"meetingChanged\"],\n    \"states\": [\"statesChanged\"]\n  }; }\n};\nDyteChatToggle.style = dyteChatToggleCss;\n\nexport { DyteChatToggle as dyte_chat_toggle };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DyteChatToggle","hostRef","_this","_classCallCheck","registerInstance","this","stateUpdate","createEvent","onChatUpdate","_ref","_a","action","message","chatActive","userId","meeting","self","unreadMessageCount","toggleChat","states","state","activeSidebar","sidebar","emit","activeMoreMenu","variant","undefined","size","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","_this2","meetingChanged","statesChanged","onChange","_b","chat","removeListener","messages","length","addListener","s","config","controlBar","elements","h","Host","title","class","part","active","onClick","icon","label","get","style","getLangData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","setTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","n","done","set","filter","err","e","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elms","stencilSubscription","createStore"],"sourceRoot":""}