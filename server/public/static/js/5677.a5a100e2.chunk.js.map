{"version":3,"file":"static/js/5677.a5a100e2.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-broadcast-message-modal.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { s as state } from './store-183b9cab.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\n\nconst dyteBroadcastMessageModalCss = \":host{position:relative;display:flex;flex-direction:column;overflow:hidden;border-radius:var(--dyte-border-radius-md, 8px);padding:var(--dyte-space-4, 16px);width:100%;font-family:var(--dyte-font-family, sans-serif);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));width:400px;max-width:80%}.content-col{display:flex;width:100%;flex-direction:column}h2{margin:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-2, 8px)}.content-row{display:flex;width:100%;flex-direction:row}.content-row dyte-button{margin-top:var(--dyte-space-4, 16px);width:100%}textarea{margin-top:var(--dyte-space-3, 12px);resize:none;border-radius:var(--dyte-border-radius-sm, 4px);border-width:var(--dyte-border-width-none, 0);border-style:none;outline:2px solid transparent;outline-offset:2px;height:var(--dyte-space-16, 64px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));padding:var(--dyte-space-2, 8px);color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76));font-family:var(--dyte-font-family, sans-serif)}textarea::-moz-placeholder{color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}textarea::placeholder{color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}select{border-radius:var(--dyte-border-radius-sm, 4px);border-width:var(--dyte-border-width-none, 0);border-style:none;padding-top:var(--dyte-space-3, 12px);padding-bottom:var(--dyte-space-3, 12px);padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px);outline:2px solid transparent;outline-offset:2px;border-right-width:var(--dyte-border-width-md, 2px);border-style:solid;border-color:transparent;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255))}p{margin:var(--dyte-space-0, 0px);margin-top:var(--dyte-space-2, 8px);width:100%;text-align:center;font-size:14px;--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-text-opacity));display:flex;flex-direction:row;align-items:center;justify-content:center}p dyte-icon{margin-left:var(--dyte-space-1, 4px);height:var(--dyte-space-5, 20px)}\";\n\nconst DyteBroadcastMessageModal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.meeting = undefined;\n    this.states = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.messagePayload = {\n      to: 'Everyone',\n      message: '',\n    };\n    this.successMessage = false;\n  }\n  close() {\n    var _a;\n    (_a = this.stateUpdate) === null || _a === void 0 ? void 0 : _a.emit({ activeBroadcastMessageModal: false });\n    state.activeBroadcastMessageModal = false;\n  }\n  sendMessage() {\n    // TODO:(ishita1805) Send this.messagePayload to webcore.\n    this.successMessage = true;\n    setTimeout(() => {\n      this.close();\n    }, 2000);\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: \"content-col\" }, h(\"h2\", null, \"Broadcast message to\"), h(\"select\", { onChange: (e) => {\n        this.messagePayload = Object.assign(Object.assign({}, this.messagePayload), { to: e.target.value });\n      } }, h(\"option\", null, \"Everyone\"), h(\"option\", null, \"List of rooms\")), h(\"textarea\", { placeholder: \"Type message here...\", onInput: (e) => {\n        this.messagePayload = Object.assign(Object.assign({}, this.messagePayload), { message: e.target.value });\n      } }), this.successMessage ? (h(\"p\", null, \"Message sent to \", this.messagePayload.to, h(\"dyte-icon\", { icon: this.iconPack.checkmark, iconPack: this.iconPack, t: this.t }))) : (h(\"div\", { class: \"content-row\" }, h(\"dyte-button\", { onClick: () => this.close(), variant: \"secondary\", iconPack: this.iconPack, t: this.t }, \"Cancel\"), \"\\u2002\", h(\"dyte-button\", { variant: \"primary\", onClick: () => this.sendMessage(), iconPack: this.iconPack, t: this.t }, \"Send\"))))));\n  }\n};\nDyteBroadcastMessageModal.style = dyteBroadcastMessageModalCss;\n\nexport { DyteBroadcastMessageModal as dyte_broadcast_message_modal };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DyteBroadcastMessageModal","hostRef","_classCallCheck","registerInstance","this","stateUpdate","createEvent","meeting","undefined","states","iconPack","defaultIconPack","t","useLanguage","messagePayload","to","message","successMessage","_createClass","key","value","_a","emit","activeBroadcastMessageModal","state","_this","setTimeout","close","_this2","h","Host","class","onChange","e","Object","assign","target","placeholder","onInput","icon","checkmark","onClick","variant","sendMessage","style","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","t1","t2","json","t3","call","t4","stop","_x","apply","arguments","length","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","s","n","done","set","get","filter","err","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elements","elms","stencilSubscription","createStore"],"sourceRoot":""}