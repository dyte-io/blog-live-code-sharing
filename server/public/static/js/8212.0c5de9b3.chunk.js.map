{"version":3,"file":"static/js/8212.0c5de9b3.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-overlay-modal.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { s as state } from './store-183b9cab.js';\n\nconst dyteOverlayModalCss = \":host{display:flex;height:100%;width:100%;flex-direction:column;align-items:center;justify-content:center;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / 0.6);position:fixed;top:var(--dyte-space-0, 0px);right:var(--dyte-space-0, 0px);z-index:50}dyte-icon{height:var(--dyte-space-20, 80px)}h2{margin:var(--dyte-space-2, 8px);font-weight:500}p{margin:var(--dyte-space-0, 0px);font-size:16px}\";\n\nconst DyteOverlayModal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.meeting = undefined;\n    this.states = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n  }\n  connectedCallback() {\n    if (this.states.activeOverlayModal.timeout) {\n      setTimeout(() => {\n        this.stateUpdate.emit({ activeOverlayModal: { active: false } });\n        state.activeOverlayModal = { active: false };\n      }, this.states.activeOverlayModal.timeout);\n    }\n  }\n  componentDidLoad() { }\n  disconnectedCallback() { }\n  render() {\n    return (h(Host, null, h(\"dyte-icon\", { icon: this.states.activeOverlayModal.icon, iconPack: this.iconPack, t: this.t }), h(\"h2\", null, this.states.activeOverlayModal.title), h(\"p\", null, this.states.activeOverlayModal.description)));\n  }\n};\nDyteOverlayModal.style = dyteOverlayModalCss;\n\nexport { DyteOverlayModal as dyte_overlay_modal };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DyteOverlayModal","hostRef","_classCallCheck","registerInstance","this","stateUpdate","createEvent","meeting","undefined","states","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","_this","activeOverlayModal","timeout","setTimeout","emit","active","state","h","Host","icon","title","description","style","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","length","_a","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","s","n","done","set","get","filter","err","e","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","onChange","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elements","elms","stencilSubscription","createStore"],"sourceRoot":""}