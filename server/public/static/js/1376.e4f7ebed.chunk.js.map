{"version":3,"file":"static/js/1376.e4f7ebed.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/dyte-settings-toggle.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/store-183b9cab.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { s as state } from './store-183b9cab.js';\n\nconst dyteSettingsToggleCss = \":host{display:block;font-family:var(--dyte-font-family, sans-serif)}\";\n\nconst DyteSettingsToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n    this.variant = 'button';\n    this.states = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n  }\n  toggleSettings() {\n    var _a;\n    this.stateUpdate.emit({\n      activeSettings: !((_a = this.states) === null || _a === void 0 ? void 0 : _a.activeSettings),\n      activeMoreMenu: false,\n    });\n    state.activeSettings = !state.activeSettings;\n    state.activeMoreMenu = false;\n  }\n  render() {\n    const text = this.t('settings');\n    return (h(Host, { title: text }, h(\"dyte-controlbar-button\", { part: \"controlbar-button\", size: this.size, iconPack: this.iconPack, t: this.t, onClick: () => this.toggleSettings(), icon: this.iconPack.settings, label: text, variant: this.variant })));\n  }\n};\nDyteSettingsToggle.style = dyteSettingsToggleCss;\n\nexport { DyteSettingsToggle as dyte_settings_toggle };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","import { a as getRenderingRef, f as forceUpdate } from './index-60449c9e.js';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nconst { state, onChange } = createStore({});\n\nexport { onChange as o, state as s };\n"],"names":["DyteSettingsToggle","hostRef","_classCallCheck","registerInstance","this","stateUpdate","createEvent","variant","states","undefined","size","iconPack","defaultIconPack","t","useLanguage","_createClass","key","value","_a","emit","activeSettings","activeMoreMenu","state","_this","text","h","Host","title","part","onClick","toggleSettings","icon","settings","label","style","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","concat","sent","ok","t0","Object","t1","t2","json","t3","assign","call","t4","stop","_x","apply","arguments","length","isConnected","maybeElement","cleanupElements","fn","ms","timeoutId","_len","args","Array","_key","clearTimeout","setTimeout","debounce","map","_step","_iterator","_createForOfIteratorHelper","keys","s","n","done","set","get","filter","err","e","f","unwrap","val","removeFromArray","array","item","index","indexOf","_createStore","defaultState","shouldUpdate","a","b","unwrappedState","Map","entries","handlers","dispose","reset","forEach","cb","propName","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","callback","push","onChange","unSet","newValue","unReset","use","_len2","subscriptions","_key2","unsubs","reduce","subscription","unsub","forceUpdate","createObservableMap","getRenderingRef","elmsToUpdate","clear","elm","items","includes","appendToMap","elements","elms","stencilSubscription","createStore"],"sourceRoot":""}