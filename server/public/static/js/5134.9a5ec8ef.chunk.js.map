{"version":3,"file":"static/js/5134.9a5ec8ef.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/date-8c24cfe1.js","../node_modules/@dytesdk/ui-kit/dist/esm/dyte-chat-composer-ui_3.entry.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js","../node_modules/@dytesdk/ui-kit/dist/esm/scroll-8cc79809.js"],"sourcesContent":["const differenceInMinutes = (oldDate, newDate) => {\n  // difference in milliseconds\n  const diff = newDate.getTime() - oldDate.getTime();\n  return Math.round(Math.abs(diff / 1000 / 60));\n};\nconst elapsedDuration = (oldDate, newDate) => {\n  const minutes = differenceInMinutes(oldDate, newDate);\n  if (minutes < 2) {\n    return 'just now';\n  }\n  if (minutes < 60) {\n    return `${minutes}m ago`;\n  }\n  const hours = Math.round(minutes / 60);\n  if (minutes < 90) {\n    return `about ${hours}h ago`;\n  }\n  if (hours < 24) {\n    return `${hours}h ago`;\n  }\n  const days = Math.round(hours / 24);\n  if (days < 7) {\n    return `${days}d ago`;\n  }\n  const weeks = Math.round(days / 7);\n  return `${weeks}w ago`;\n};\nconst formatDateTime = (date) => {\n  return date.toDateString() + ' ' + date.toLocaleTimeString();\n};\n\nexport { differenceInMinutes as d, elapsedDuration as e, formatDateTime as f };\n","import { r as registerInstance, c as createEvent, h, H as Host, w as writeTask } from './index-60449c9e.js';\nimport { d as defaultIconPack } from './default-language-95a0d199.js';\nimport { u as useLanguage } from './index-2b010b0f.js';\nimport { h as handleFilesDataTransfer, g as generateChatGroupKey } from './chat-0611caa4.js';\nimport { g as gracefulStorage } from './graceful-storage-33bc316d.js';\nimport { c as chatUnreadTimestamps } from './user-prefs-f52d234f.js';\nimport { d as differenceInMinutes } from './date-8c24cfe1.js';\nimport { s as smoothScrollToBottom } from './scroll-8cc79809.js';\n\nconst dyteChatComposerUiCss = \":host{display:flex;flex-direction:column}.chat-input{z-index:10;box-sizing:border-box;display:flex;flex-direction:column;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));border-top:var(--dyte-border-width-sm, 1px) solid rgb(var(--dyte-colors-background-600, 60 60 60))}textarea{box-sizing:border-box;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));padding:var(--dyte-space-3, 12px);color:rgb(var(--dyte-colors-text-1000, 255 255 255))}textarea::-moz-placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}textarea::placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}textarea{outline:2px solid transparent;outline-offset:2px;resize:none;overflow-y:auto;border-width:var(--dyte-border-width-none, 0);border-style:none;font-family:var(--dyte-font-family, sans-serif);min-height:80px;font-size:14px}.chat-buttons{display:flex;align-items:center;justify-content:space-between;padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px)}.chat-buttons .left dyte-button{margin-right:var(--dyte-space-1, 4px)}.chat-buttons .left dyte-button dyte-icon{height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px)}.chat-buttons>div{display:flex;align-items:center}dyte-emoji-picker{z-index:0;border-top:var(--dyte-border-width-sm, 1px) solid rgb(var(--dyte-colors-background-600, 60 60 60));-webkit-animation:0.3s slide-up ease;animation:0.3s slide-up ease}@-webkit-keyframes slide-up{from{transform:translateY(100%)}to{transform:translateY(0%)}}@keyframes slide-up{from{transform:translateY(100%)}to{transform:translateY(0%)}}\";\n\nconst DyteChatComposerUi = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.onNewMessage = createEvent(this, \"dyteNewMessage\", 7);\n    this.handleKeyDown = (e) => {\n      // slack like typing experience\n      if (e.key === 'Enter' && e.shiftKey) {\n        const height = this.$textArea.clientHeight;\n        if (height < 200) {\n          this.$textArea.style.height = this.$textArea.clientHeight + 20 + 'px';\n        }\n      }\n      else if (e.key === 'Enter') {\n        e.preventDefault();\n        this.handleSendMessage();\n      }\n      else if (e.key === 'Backspace') {\n        if (this.$textArea.value.endsWith('\\n')) {\n          this.$textArea.style.height = this.$textArea.clientHeight - 20 + 'px';\n        }\n        else if (this.$textArea.value === '') {\n          this.$textArea.style.height = 'auto';\n        }\n      }\n    };\n    this.onPaste = (e) => {\n      const data = e.clipboardData || e.originalEvent.clipboardData;\n      handleFilesDataTransfer(data.items, this.sendFile);\n    };\n    this.sendFile = (type, file) => {\n      if (!this.canSendFiles) {\n        return;\n      }\n      if (type === 'image') {\n        this.onNewMessage.emit({ type: 'image', file });\n      }\n      else {\n        this.onNewMessage.emit({ type: 'file', file });\n      }\n    };\n    this.canSendTextMessage = false;\n    this.canSendFiles = false;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.disableEmojiPicker = false;\n    this.emojiPickerActive = false;\n  }\n  handleSendMessage() {\n    if (!this.canSendTextMessage) {\n      return;\n    }\n    const message = this.$textArea.value.trim();\n    if (message.length > 0) {\n      this.onNewMessage.emit({ type: 'text', message });\n      this.$textArea.value = '';\n      this.$textArea.style.height = 'auto';\n      gracefulStorage.setItem('dyte-text-message', '');\n    }\n  }\n  uploadFile(type) {\n    const input = document.createElement('input');\n    input.type = 'file';\n    if (type === 'image') {\n      input.accept = 'image/*';\n    }\n    input.onchange = (e) => {\n      const { validity, files: [file], } = e.target;\n      if (validity.valid) {\n        this.sendFile(type, file);\n      }\n    };\n    input.click();\n  }\n  render() {\n    const uiProps = { iconPack: this.iconPack, t: this.t, size: this.size };\n    return (h(Host, null, this.canSendTextMessage && this.emojiPickerActive && (h(\"dyte-emoji-picker\", { part: \"emoji-picker\", onDyteEmojiClicked: (e) => {\n        this.$textArea.value += e.detail;\n        this.$textArea.focus();\n      }, t: this.t })), h(\"slot\", { name: \"chat-addon\" }), h(\"div\", { class: \"chat-input\", part: \"chat-input\" }, this.canSendTextMessage && (h(\"textarea\", { class: \"scrollbar\", part: \"textarea\", placeholder: \"Message..\", ref: (el) => (this.$textArea = el), autoFocus: true, onPaste: this.onPaste, onKeyDown: this.handleKeyDown, onInput: (e) => {\n        gracefulStorage.setItem('dyte-text-message', e.target.value);\n      } })), h(\"div\", { class: \"chat-buttons\", part: \"chat-buttons\" }, h(\"div\", { class: \"left\", part: \"chat-buttons-left\" }, this.canSendFiles && [\n      h(\"dyte-tooltip\", Object.assign({ label: this.t('Send a file') }, uiProps), h(\"dyte-button\", { variant: \"ghost\", kind: \"icon\", onClick: () => this.uploadFile('file'), title: this.t('Send a file'), iconPack: this.iconPack, t: this.t }, h(\"dyte-icon\", { icon: this.iconPack.attach }))),\n      h(\"dyte-tooltip\", Object.assign({ label: this.t('Send an image') }, uiProps), h(\"dyte-button\", { variant: \"ghost\", kind: \"icon\", onClick: () => this.uploadFile('image'), title: this.t('Send an image'), iconPack: this.iconPack, t: this.t }, h(\"dyte-icon\", { icon: this.iconPack.image }))),\n    ], this.canSendTextMessage && !this.disableEmojiPicker && (h(\"dyte-tooltip\", Object.assign({ label: this.t('Send Emoji') }, uiProps), h(\"dyte-button\", { variant: \"ghost\", kind: \"icon\", class: { active: this.emojiPickerActive }, title: this.t('Send Emoji'), iconPack: this.iconPack, t: this.t, onClick: () => {\n        this.emojiPickerActive = !this.emojiPickerActive;\n      } }, h(\"dyte-icon\", { icon: this.iconPack.emoji_multiple }))))), this.canSendTextMessage && (h(\"div\", { class: \"right\", part: \"chat-buttons-right\" }, h(\"dyte-tooltip\", Object.assign({ variant: \"primary\", label: this.t('Send message'), delay: 2000 }, uiProps), h(\"dyte-button\", { kind: \"icon\", onClick: () => this.handleSendMessage(), title: this.t('Send message'), iconPack: this.iconPack, t: this.t }, h(\"dyte-icon\", { icon: this.iconPack.send })))))))));\n  }\n};\nDyteChatComposerUi.style = dyteChatComposerUiCss;\n\nconst dyteChatMessagesUiCss = \".scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{position:relative;display:flex;flex-direction:column}.chat-container{box-sizing:border-box;display:flex;flex-direction:column;padding-top:var(--dyte-space-4, 16px);padding-bottom:var(--dyte-space-4, 16px);flex:1 0 0px;overflow-y:scroll}.chat-container .spacer{flex:1 1 auto}.chat-container .chat{flex:0 0 auto}.file-picker{display:none}.chat *:first-child{margin-top:var(--dyte-space-0, 0px)}.chat .head{display:flex;align-items:center}.chat .head .name{margin-right:var(--dyte-space-4, 16px);font-size:12px;font-weight:700}.chat .head .time{font-size:12px;color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.chat .body{margin-top:var(--dyte-space-2, 8px);margin-bottom:var(--dyte-space-2, 8px);overflow-wrap:break-word;font-size:14px;line-height:1.25rem}.chat .body .emoji{font-size:24px}p{margin-top:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-3, 12px)}dyte-text-message,dyte-image-message,dyte-file-message{margin-top:var(--dyte-space-4, 16px);display:block;padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);font-family:var(--dyte-font-family, sans-serif);color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88));box-sizing:border-box}*[is-continued]{margin-top:var(--dyte-space-3, 12px)}dyte-text-message[is-continued]{margin-top:var(--dyte-space-2, 8px)}.chat .image{position:relative;height:var(--dyte-space-40, 160px);max-width:var(--dyte-space-64, 256px);cursor:pointer}.chat .image img{display:none;height:100%;width:100%;border-radius:var(--dyte-border-radius-sm, 4px);-o-object-fit:cover;object-fit:cover}.chat .image .image-spinner{display:flex;height:100%;width:100%;flex-direction:column;align-items:center;justify-content:center;border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity))}.chat .image .image-spinner dyte-spinner{--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}.chat .image .image-errored{display:flex;height:100%;width:100%;flex-direction:column;align-items:center;justify-content:center;border-radius:var(--dyte-border-radius-sm, 4px);background-color:rgba(var(--dyte-colors-danger, 255 45 45) / 0.1);--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}.chat .image .actions{display:none;height:var(--dyte-space-8, 32px);align-items:center;position:absolute;top:var(--dyte-space-2, 8px);right:var(--dyte-space-2, 8px);border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));overflow:hidden;--tw-shadow:0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.chat .image .actions .action{height:var(--dyte-space-8, 32px);width:var(--dyte-space-8, 32px);border-radius:var(--dyte-border-radius-none, 0);border-width:var(--dyte-border-width-none, 0);border-style:none;background-color:transparent;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.chat .image .actions .action:hover{--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}.image.loaded img{display:block}.image.loaded .image-spinner{display:none}.image:hover .actions,.image:focus .actions{display:flex}.chat .file{display:flex;align-items:center;padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px);padding-top:var(--dyte-space-1\\\\.5, 6px);padding-bottom:var(--dyte-space-1\\\\.5, 6px);border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.chat .file .file-data{flex:1 1 0%}.chat .file .file-data .name{color:rgb(var(--dyte-colors-text-1000, 255 255 255));overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.chat .file .file-data .file-data-split{margin-top:var(--dyte-space-0\\\\.5, 2px);display:flex;align-items:center;font-size:12px}.chat .file .file-data .file-data-split .ext{margin-right:var(--dyte-space-2, 8px);text-transform:uppercase}.chat .file .file-data .file-data-split .divider{height:var(--dyte-space-4, 16px);width:var(--dyte-space-0\\\\.5, 2px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}.chat .file .file-data .file-data-split .size{margin-left:var(--dyte-space-2, 8px)}a{--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-text-opacity));-webkit-text-decoration-line:none;text-decoration-line:none}a:hover{-webkit-text-decoration-line:underline;text-decoration-line:underline}.new-chat-marker{display:flex;width:100%;align-items:center;gap:var(--dyte-space-2, 8px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-300, 73 124 253) / var(--tw-text-opacity))}.new-chat-marker::before{content:'';height:1px;flex:1 1 0%;background-color:rgba(var(--dyte-colors-brand-300, 73 124 253) / 0.5)}.show-new-messages-ctr{pointer-events:none;display:flex;justify-content:flex-end;padding:var(--dyte-space-3, 12px);z-index:0;margin-top:calc(var(--dyte-space-14, 56px) * -1)}.show-new-messages{pointer-events:auto;--tw-translate-y:calc(var(--dyte-space-6, 24px) * -1);transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));opacity:0;transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.show-new-messages.active{--tw-translate-y:var(--dyte-space-0, 0px);transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));opacity:1}\";\n\nconst DyteChatMessagesUi = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.observingEl = [];\n    this.onScroll = (e) => {\n      const target = e.target;\n      writeTask(() => {\n        const { scrollTop, clientHeight, scrollHeight } = target;\n        const fromTop = scrollTop + clientHeight;\n        if (fromTop + 10 >= scrollHeight) {\n          // at bottom\n          this.autoScrollEnabled = true;\n          this.showLatestMessageButton = false;\n        }\n        else {\n          // not at bottom\n          this.autoScrollEnabled = false;\n        }\n      });\n    };\n    this.scrollToBottom = () => {\n      smoothScrollToBottom(this.$chat);\n    };\n    this.observeMessage = (el) => {\n      if (el) {\n        this.observingEl.push(el);\n      }\n      try {\n        this.intersectionObserver.observe(el);\n      }\n      catch (_a) { }\n    };\n    this.selectedGroup = undefined;\n    this.messages = [];\n    this.selfUserId = undefined;\n    this.size = undefined;\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.now = new Date();\n    this.showLatestMessageButton = false;\n  }\n  connectedCallback() {\n    var _a;\n    this.lastReadTimestamp = (_a = chatUnreadTimestamps['everyone']) !== null && _a !== void 0 ? _a : new Date('0001-01-01T00:00:00Z');\n    this.intersectionObserver = new IntersectionObserver((entries) => {\n      if (!document.hasFocus())\n        return;\n      writeTask(() => {\n        for (const entry of entries) {\n          if (entry.isIntersecting) {\n            const currTimestamp = parseInt(entry.target.getAttribute('data-timestamp'));\n            if (currTimestamp > this.lastReadTimestamp.getTime()) {\n              // this.lastReadTimestamp = new Date();\n              chatUnreadTimestamps[this.selectedGroup] = new Date();\n            }\n          }\n        }\n      });\n    });\n    // update current time every minute\n    const updateNow = () => {\n      this.now = new Date();\n      this.timeout = setTimeout(() => {\n        if (this.request != null) {\n          this.request = requestAnimationFrame(updateNow);\n        }\n      }, 60 * 1000);\n    };\n    this.request = requestAnimationFrame(updateNow);\n  }\n  componentDidLoad() {\n    this.$chat.addEventListener('scroll', this.onScroll);\n  }\n  componentDidRender() {\n    if (this.autoScrollEnabled) {\n      smoothScrollToBottom(this.$chat);\n    }\n    else if (this.autoScrollEnabled == null) {\n      // scroll to bottom on first render\n      smoothScrollToBottom(this.$chat, false);\n    }\n  }\n  chatChanged(messages) {\n    if (this.$chat == null)\n      return;\n    if (this.autoScrollEnabled || this.$chat.clientHeight === this.$chat.scrollHeight)\n      return;\n    for (let i = messages.length - 1; i >= 0; i--) {\n      if (messages[i].message.time > this.lastReadTimestamp &&\n        messages[i].message.userId !== this.selfUserId) {\n        // show latest message button when you have new messages\n        // and chat container is scrollable and autoscroll is not enabled\n        this.showLatestMessageButton = true;\n        break;\n      }\n    }\n  }\n  selectedBucketChanged() {\n    this.autoScrollEnabled = undefined;\n    this.observingEl.forEach((el) => {\n      this.intersectionObserver.unobserve(el);\n    });\n    this.observingEl = [];\n  }\n  disconnectedCallback() {\n    this.$chat.removeEventListener('scroll', this.onScroll);\n    this.intersectionObserver.disconnect();\n    clearTimeout(this.timeout);\n    cancelAnimationFrame(this.request);\n  }\n  render() {\n    var _a;\n    let prevMessage = null;\n    let reachedFirstUnread = false;\n    return (h(Host, null, h(\"div\", { class: \"chat-container scrollbar\", ref: (el) => (this.$chat = el), part: \"container\" }, h(\"div\", { class: \"spacer\", part: \"spacer\" }), h(\"div\", { class: \"chat\", part: \"chat\" }, (_a = this.messages) === null || _a === void 0 ? void 0 : _a.map((item) => {\n      if (item.type === 'chat') {\n        const { message } = item;\n        const isSelfMessage = message.userId === this.selfUserId;\n        const isUnread = !isSelfMessage &&\n          !this.autoScrollEnabled &&\n          !reachedFirstUnread &&\n          message.time > this.lastReadTimestamp;\n        if (isUnread)\n          reachedFirstUnread = isUnread;\n        const isContinued = !isUnread &&\n          message.userId === (prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.userId) &&\n          differenceInMinutes(message.time, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.time) < 2;\n        prevMessage = message;\n        switch (message.type) {\n          case 'text':\n            return (h(\"div\", { \"is-continued\": isContinued, key: item.message.id }, isUnread && (h(\"div\", { class: \"new-chat-marker\", part: \"new-chat-marker\" }, this.t('chat.new'))), h(\"dyte-text-message\", { message: message, now: this.now, isContinued: isContinued, \"data-timestamp\": message.time.getTime(), ref: this.observeMessage, iconPack: this.iconPack, t: this.t })));\n          case 'image':\n            return (h(\"div\", { \"is-continued\": isContinued, key: item.message.id }, isUnread && (h(\"div\", { class: \"new-chat-marker\", part: \"new-chat-marker\" }, this.t('chat.new'))), h(\"dyte-image-message\", { message: message, now: this.now, isContinued: isContinued, iconPack: this.iconPack, \"data-timestamp\": message.time.getTime(), ref: this.observeMessage, t: this.t })));\n          case 'file':\n            return (h(\"div\", { \"is-continued\": isContinued, key: item.message.id }, isUnread && (h(\"div\", { class: \"new-chat-marker\", part: \"new-chat-marker\" }, this.t('chat.new'))), h(\"dyte-file-message\", { message: message, now: this.now, isContinued: isContinued, iconPack: this.iconPack, t: this.t, \"data-timestamp\": message.time.getTime(), ref: this.observeMessage })));\n        }\n      }\n      return null;\n    }))), h(\"div\", { class: \"show-new-messages-ctr\" }, h(\"dyte-button\", { class: {\n        'show-new-messages': true,\n        active: this.showLatestMessageButton,\n      }, kind: \"icon\", part: \"show-new-messages\", onClick: this.scrollToBottom, iconPack: this.iconPack, t: this.t }, h(\"dyte-icon\", { icon: this.iconPack.chevron_down, iconPack: this.iconPack, t: this.t })))));\n  }\n  static get watchers() { return {\n    \"messages\": [\"chatChanged\"],\n    \"selectedGroup\": [\"selectedBucketChanged\"]\n  }; }\n};\nDyteChatMessagesUi.style = dyteChatMessagesUiCss;\n\nconst dyteChatSelectorUiCss = \".scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\\\.5, 6px);width:var(--dyte-space-1\\\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{display:flex;flex-direction:column;font-family:var(--dyte-font-family, sans-serif)}.chat-scope-selector{position:relative;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity));z-index:10}.chat-scope-selector button{width:100%;border-width:var(--dyte-border-width-none, 0);border-style:none;padding:var(--dyte-space-4, 16px);display:flex;align-items:center;justify-content:space-between;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));font-family:var(--dyte-font-family, sans-serif);font-size:14px;cursor:pointer;height:var(--dyte-space-12, 48px)}.chat-scope-selector button span{display:flex;align-items:center;justify-content:flex-start}.chat-scope-selector button dyte-icon{height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px)}.chat-scope-selector .search{position:-webkit-sticky;position:sticky;box-sizing:border-box;display:flex;align-items:center;border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));margin-left:var(--dyte-space-3, 12px);margin-right:var(--dyte-space-3, 12px);margin-top:var(--dyte-space-3, 12px);margin-bottom:var(--dyte-space-0, 0px)}.chat-scope-selector .search dyte-icon{margin-left:var(--dyte-space-2, 8px);margin-right:var(--dyte-space-2, 8px);height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px);color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}.chat-scope-selector .search input{box-sizing:border-box;height:var(--dyte-space-9, 36px);width:100%;padding-right:var(--dyte-space-2, 8px);border-width:var(--dyte-border-width-none, 0);border-style:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));outline:2px solid transparent;outline-offset:2px;border-radius:var(--dyte-border-radius-sm, 4px);font-size:14px}.chat-scope-selector .search input::-moz-placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.chat-scope-selector .search input::placeholder{color:rgb(var(--dyte-colors-text-800, 255 255 255 / 0.76))}.chat-scope-selector .participants-container{position:absolute;width:100%;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));top:var(--dyte-space-12, 48px);-webkit-animation:0.3s slide-down ease;animation:0.3s slide-down ease}@-webkit-keyframes slide-down{from{transform:translateY(-50px)}to{transform:translateY(0%)}}@keyframes slide-down{from{transform:translateY(-50px)}to{transform:translateY(0%)}}.chat-scope-selector .scope-list{margin-top:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-0, 0px);list-style-type:none;padding-left:var(--dyte-space-0, 0px);padding-right:var(--dyte-space-0, 0px);overflow:auto;max-height:375px}.chat-scope-selector .scope-list .scope{position:relative;display:flex;flex-direction:row;align-items:center;padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);padding-top:var(--dyte-space-4, 16px);padding-bottom:var(--dyte-space-4, 16px)}.chat-scope-selector .scope-list .scope:hover{cursor:pointer;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity))}.chat-scope-selector .scope-list .scope-special{margin-top:var(--dyte-space-4, 16px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}.chat-scope-selector .scope-list .everyone-icon>dyte-icon{height:var(--dyte-space-6, 24px);width:var(--dyte-space-6, 24px);color:rgb(var(--dyte-colors-text-1000, 255 255 255))}.chat-scope-selector .scope-list .everyone-icon{display:flex;height:100%;width:100%;align-items:center;justify-content:center;margin-right:var(--dyte-space-2, 8px);height:var(--dyte-space-8, 32px);width:var(--dyte-space-8, 32px);border-radius:9999px;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px}.unread-count.selector{position:unset;margin-left:var(--dyte-space-2, 8px)}.unread-count{position:absolute;right:var(--dyte-space-3, 12px);box-sizing:border-box;padding:var(--dyte-space-0\\\\.5, 2px);-webkit-user-select:none;-moz-user-select:none;user-select:none;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));font-size:12px;color:rgb(var(--dyte-colors-text-1000, 255 255 255));display:flex;height:var(--dyte-space-5, 20px);min-width:var(--dyte-space-5, 20px);align-items:center;justify-content:center;border-radius:9999px;z-index:1}dyte-avatar{height:var(--dyte-space-8, 32px);width:var(--dyte-space-8, 32px)}\";\n\nconst DyteChatSelectorUi = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.groupChanged = createEvent(this, \"dyteChatGroupChanged\", 7);\n    this.onScopeClick = (scope) => {\n      this.showParticipantsPanel = false;\n      this.groupChanged.emit(scope);\n    };\n    this.selfUserId = undefined;\n    this.selectedGroupId = undefined;\n    this.unreadCounts = {};\n    this.groups = [];\n    this.iconPack = defaultIconPack;\n    this.t = useLanguage();\n    this.showParticipantsPanel = false;\n    this.query = '';\n  }\n  toggleParticipants() {\n    this.showParticipantsPanel = !this.showParticipantsPanel;\n  }\n  getGroups() {\n    return this.groups.filter((participant) => participant.name.toLowerCase().includes(this.query.toLowerCase()));\n  }\n  getName() {\n    if (!this.selectedGroupId || this.selectedGroupId === 'everyone') {\n      return this.t('everyone');\n    }\n    const group = this.groups.find((g) => g.userId === this.selectedGroupId);\n    if (group) {\n      return group.name;\n    }\n    return this.t('everyone');\n  }\n  render() {\n    const unreadCountTotal = Object.keys(this.unreadCounts).reduce((total, key) => {\n      return total + this.unreadCounts[key];\n    }, 0);\n    return (h(Host, null, h(\"div\", { class: \"chat-scope-selector\" }, this.showParticipantsPanel && (h(\"div\", { class: \"participants-container\" }, h(\"div\", { class: \"search\", part: \"search\" }, h(\"dyte-icon\", { icon: this.iconPack.search, part: \"search-icon\" }), h(\"input\", { type: \"search\", autocomplete: \"off\", placeholder: \"Search\", value: this.query, onInput: (e) => {\n        this.query = e.target.value;\n      }, part: \"search-input\" })), h(\"ul\", { class: \"scope-list scrollbar\" }, this.query === '' && (h(\"li\", { class: \"scope scope-special\", onClick: () => this.onScopeClick('everyone') }, h(\"div\", { class: \"everyone-icon\" }, h(\"dyte-icon\", { icon: this.iconPack.participants })), \"Everyone\", this.unreadCounts['everyone'] > 0 && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, this.unreadCounts['everyone']))))), this.getGroups().map((group) => {\n      const count = this.unreadCounts[generateChatGroupKey([this.selfUserId, group.userId])];\n      return (h(\"li\", { class: \"scope\", onClick: () => this.onScopeClick(group), key: group.userId }, group.name, count > 0 && (h(\"div\", { class: \"unread-count\", part: \"unread-count\" }, h(\"span\", null, count)))));\n    })))), h(\"button\", { onClick: () => this.toggleParticipants() }, h(\"span\", null, `${this.t('To')} ${this.getName()}`, '  ', unreadCountTotal > 0 && (h(\"div\", { class: \"unread-count selector\" }, h(\"span\", null, unreadCountTotal)))), h(\"dyte-icon\", { icon: this.showParticipantsPanel ? this.iconPack.chevron_up : this.iconPack.chevron_down })))));\n  }\n};\nDyteChatSelectorUi.style = dyteChatSelectorUiCss;\n\nexport { DyteChatComposerUi as dyte_chat_composer_ui, DyteChatMessagesUi as dyte_chat_messages_ui, DyteChatSelectorUi as dyte_chat_selector_ui };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n","/**\n * Scroll to bottom of an element.\n *\n * Works in all browsers - just that in Safari, the smooth scrolling doesn't work.\n * @param el The bottom of which element you want to scroll down to\n */\nconst smoothScrollToBottom = (el, smooth = true) => {\n  if (el == null)\n    return;\n  el.scrollTo({ top: el.scrollHeight, behavior: smooth ? 'smooth' : 'auto' });\n};\n\nexport { smoothScrollToBottom as s };\n"],"names":["differenceInMinutes","oldDate","newDate","diff","getTime","Math","round","abs","elapsedDuration","minutes","concat","hours","days","weeks","formatDateTime","date","toDateString","toLocaleTimeString","DyteChatComposerUi","hostRef","_this","_classCallCheck","registerInstance","this","onNewMessage","createEvent","handleKeyDown","e","key","shiftKey","$textArea","clientHeight","style","height","preventDefault","handleSendMessage","value","endsWith","onPaste","data","clipboardData","originalEvent","handleFilesDataTransfer","items","sendFile","type","file","canSendFiles","emit","canSendTextMessage","size","undefined","iconPack","defaultIconPack","t","useLanguage","disableEmojiPicker","emojiPickerActive","_createClass","message","trim","length","gracefulStorage","_this2","input","document","createElement","accept","onchange","_e$target","target","validity","_slicedToArray","files","valid","click","_this3","uiProps","h","Host","part","onDyteEmojiClicked","detail","focus","name","class","placeholder","ref","el","autoFocus","onKeyDown","onInput","Object","assign","label","variant","kind","onClick","uploadFile","title","icon","attach","image","active","emoji_multiple","delay","send","DyteChatMessagesUi","_this4","observingEl","onScroll","writeTask","scrollTop","scrollHeight","autoScrollEnabled","showLatestMessageButton","scrollToBottom","smoothScrollToBottom","$chat","observeMessage","push","intersectionObserver","observe","_a","selectedGroup","messages","selfUserId","now","Date","_this5","lastReadTimestamp","chatUnreadTimestamps","IntersectionObserver","entries","hasFocus","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","isIntersecting","parseInt","getAttribute","err","f","request","requestAnimationFrame","updateNow","timeout","setTimeout","addEventListener","i","time","userId","_this6","forEach","unobserve","removeEventListener","disconnect","clearTimeout","cancelAnimationFrame","_this7","prevMessage","reachedFirstUnread","map","item","isUnread","isContinued","id","chevron_down","get","DyteChatSelectorUi","_this8","groupChanged","onScopeClick","scope","showParticipantsPanel","selectedGroupId","unreadCounts","groups","query","_this9","filter","participant","toLowerCase","includes","_this10","group","find","g","_this11","unreadCountTotal","keys","reduce","total","search","autocomplete","participants","getGroups","count","generateChatGroupKey","toggleParticipants","getName","chevron_up","getLangData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","abrupt","defaultLanguage","fetch","sent","ok","t0","t1","t2","json","t3","call","t4","stop","_x","apply","arguments","smooth","scrollTo","top","behavior"],"sourceRoot":""}