{"version":3,"file":"static/js/6588.aecb9da5.chunk.js","mappings":"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","sources":["../node_modules/@dytesdk/ui-kit/dist/esm/ResizeObserver.es-02979d4e.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-0865d046.js","../node_modules/@dytesdk/ui-kit/dist/esm/index-2b010b0f.js"],"sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport { index as i };\n","import { h, H as Host } from './index-60449c9e.js';\n\n/**\n * Computes selectors and returns them based on their priority.\n */\nconst computeSelectors = ({ element, size, states = {}, config = {}, }) => {\n  let selectors = [];\n  const data = config === null || config === void 0 ? void 0 : config.root[element];\n  const add = (selector) => {\n    selectors.push(selector);\n    if (typeof size === 'string') {\n      selectors.push(`${selector}.${size}`);\n    }\n  };\n  add(element);\n  if (typeof data === 'object' && !Array.isArray(data) && data !== null) {\n    // check if the data variable is an object, strictly and not an array or just null\n    const { state, states: elementStates } = data;\n    let selector = element;\n    let activeStates = [];\n    if (Array.isArray(elementStates)) {\n      activeStates = elementStates.filter((state) => states[state]);\n      activeStates.sort();\n      for (const state of activeStates) {\n        add(`${selector}.${state}`);\n      }\n      if (activeStates.length > 1) {\n        const booleanStateSelector = [selector, ...activeStates].join('.');\n        add(booleanStateSelector);\n      }\n    }\n    if (typeof state === 'string') {\n      // dyte-meeting[meeting=joined]\n      const keyValueSelector = `${element}[${state}=${states[state]}]`;\n      add(keyValueSelector);\n      for (const state of activeStates) {\n        add(`${keyValueSelector}.${state}`);\n      }\n      if (activeStates.length > 1) {\n        const withBooleanStateSelector = [keyValueSelector, ...activeStates].join('.');\n        add(withBooleanStateSelector);\n      }\n    }\n  }\n  return selectors;\n};\n/**\n * Returns the computed styles - styles obtained from combining styles from all computed selectors\n * on the basis of their priorities.\n */\nconst getComputedStyles = ({ selectors, styles }) => {\n  if (!Array.isArray(selectors) || styles == null)\n    return {};\n  const computedStyles = {};\n  for (const selector of selectors) {\n    const style = styles[selector];\n    if (style != null) {\n      Object.assign(computedStyles, style);\n    }\n  }\n  return computedStyles;\n};\n/**\n * Returns the computed children which are to be rendered inside an element\n */\nconst getComputedChildren = ({ selectors, root }) => {\n  if (!Array.isArray(selectors) || root == null)\n    return [];\n  for (let i = selectors.length - 1; i >= 0; i--) {\n    const selector = selectors[i];\n    const children = root[selector];\n    if (Array.isArray(children)) {\n      return children;\n    }\n    else if (Array.isArray(children === null || children === void 0 ? void 0 : children.children)) {\n      return children.children;\n    }\n  }\n  return [];\n};\n\n/**\n * Renders the children of an element.\n */\nconst RenderChildren = ({ elements, defaults, props = {}, deepProps = false, elementProps = {}, }) => {\n  if (!Array.isArray(elements) || elements.length === 0)\n    return null;\n  return elements.map((element) => {\n    return (h(Render, { element: element, defaults: defaults, props: props, childProps: deepProps && props, elementProps: elementProps }));\n  });\n};\n/**\n * Renders an element from UI Config\n */\nconst Render = ({ element, defaults, childProps = {}, props = {}, onlyChildren = false, asHost = false, deepProps = false, elementProps = {}, }, children) => {\n  var _a;\n  const { config, size, states } = defaults;\n  let Tag, configProps = {};\n  if (Array.isArray(element)) {\n    // get props if element is passed in array form:\n    // ['dyte-participant-tile', { variant: 'gradient' }]\n    [Tag, configProps] = element;\n  }\n  else {\n    Tag = element;\n  }\n  const elemData = (_a = config === null || config === void 0 ? void 0 : config.root) === null || _a === void 0 ? void 0 : _a[Tag];\n  if (elemData != null && 'props' in elemData) {\n    props = Object.assign(Object.assign({}, elemData['props']), props);\n  }\n  props = Object.assign(Object.assign({}, props), configProps);\n  if (Tag in elementProps) {\n    props = Object.assign(Object.assign({}, props), elementProps[Tag]);\n  }\n  const selectors = computeSelectors({ element: Tag, size, states, config });\n  const computedChildren = getComputedChildren({ selectors, root: config.root });\n  if (onlyChildren) {\n    return (h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }));\n  }\n  const styles = getComputedStyles({ selectors, styles: config.styles });\n  if (asHost) {\n    return (h(Host, Object.assign({}, defaults, { style: styles }, props),\n      h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n      children));\n  }\n  if (['dyte-header', 'dyte-controlbar'].includes(Tag)) {\n    props['disableRender'] = true;\n  }\n  if (Tag.startsWith('dyte-')) {\n    return (h(Tag, Object.assign({}, defaults, { style: styles }, props),\n      h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n      children));\n  }\n  else {\n    const [HTMLTag, id] = Tag.split('#');\n    return (h(HTMLTag, { id: id, style: styles },\n      h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n      children));\n  }\n};\n\nexport { Render as R };\n","import { a as defaultLanguage } from './default-language-95a0d199.js';\n\n// Replace with cdn base path in prod\nconst LANG_BASE_URL = 'http://localhost:5000';\nconst getLangData = async (lang) => {\n  if (lang == null || lang === 'en' || lang.trim() === '') {\n    return defaultLanguage;\n  }\n  try {\n    const res = await fetch(`${LANG_BASE_URL}/${lang}.json`);\n    if (!res.ok) {\n      return defaultLanguage;\n    }\n    // merge fetched language with defaultLanguage to avoid empty properties\n    return Object.assign({}, defaultLanguage, await res.json());\n  }\n  catch (_) {\n    return defaultLanguage;\n  }\n};\n/**\n * Creates an i18n instance from a language dictionary/object.\n * @param lang The language dictionary\n * @returns A function which handles i18n\n */\nconst useLanguage = (lang = defaultLanguage) => {\n  return (key) => {\n    var _a;\n    return (_a = lang[key]) !== null && _a !== void 0 ? _a : key;\n  };\n};\n\nexport { getLangData as g, useLanguage as u };\n"],"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","this","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","RenderChildren","_ref4","elements","defaults","_ref4$props","_ref4$deepProps","deepProps","_ref4$elementProps","elementProps","Array","isArray","element","h","Render","childProps","_ref5","children","Tag","_ref5$childProps","_ref5$props","_ref5$onlyChildren","onlyChildren","_ref5$asHost","asHost","_ref5$deepProps","_ref5$elementProps","config","states","configProps","_element","_slicedToArray","elemData","root","assign","selectors","_ref","_ref$states","_ref$config","data","add","selector","concat","state","elementStates","activeStates","sort","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_toConsumableArray","join","keyValueSelector","_step2","_iterator2","computeSelectors","computedChildren","_ref3","i","getComputedChildren","_ref2","_step3","computedStyles","_iterator3","style","getComputedStyles","Host","includes","startsWith","_Tag$split","split","_Tag$split2","HTMLTag","id","getLangData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lang","res","wrap","_context","prev","next","trim","abrupt","defaultLanguage","fetch","sent","ok","t0","t1","t2","json","t3","t4","stop","_x","useLanguage","undefined"],"sourceRoot":""}